# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  #  verizon client class.
  class Client
    include CoreLibrary
    attr_reader :config, :auth_managers

    # Returns the configured authentication oAuth2 instance.
    def oauth_2
      @auth_managers['oAuth2']
    end

    # Access to m_5g_edge_platforms controller.
    # @return [M5gEdgePlatformsController] Returns the controller instance.
    def m_5g_edge_platforms
      @m_5g_edge_platforms ||= M5gEdgePlatformsController.new @global_configuration
    end

    # Access to service_endpoints controller.
    # @return [ServiceEndpointsController] Returns the controller instance.
    def service_endpoints
      @service_endpoints ||= ServiceEndpointsController.new @global_configuration
    end

    # Access to service_profiles controller.
    # @return [ServiceProfilesController] Returns the controller instance.
    def service_profiles
      @service_profiles ||= ServiceProfilesController.new @global_configuration
    end

    # Access to device_management controller.
    # @return [DeviceManagementController] Returns the controller instance.
    def device_management
      @device_management ||= DeviceManagementController.new @global_configuration
    end

    # Access to accounts controller.
    # @return [AccountsController] Returns the controller instance.
    def accounts
      @accounts ||= AccountsController.new @global_configuration
    end

    # Access to device_groups controller.
    # @return [DeviceGroupsController] Returns the controller instance.
    def device_groups
      @device_groups ||= DeviceGroupsController.new @global_configuration
    end

    # Access to sms controller.
    # @return [SMSController] Returns the controller instance.
    def sms
      @sms ||= SMSController.new @global_configuration
    end

    # Access to session_management controller.
    # @return [SessionManagementController] Returns the controller instance.
    def session_management
      @session_management ||= SessionManagementController.new @global_configuration
    end

    # Access to connectivity_callbacks controller.
    # @return [ConnectivityCallbacksController] Returns the controller instance.
    def connectivity_callbacks
      @connectivity_callbacks ||= ConnectivityCallbacksController.new @global_configuration
    end

    # Access to account_requests controller.
    # @return [AccountRequestsController] Returns the controller instance.
    def account_requests
      @account_requests ||= AccountRequestsController.new @global_configuration
    end

    # Access to service_plans controller.
    # @return [ServicePlansController] Returns the controller instance.
    def service_plans
      @service_plans ||= ServicePlansController.new @global_configuration
    end

    # Access to device_diagnostics controller.
    # @return [DeviceDiagnosticsController] Returns the controller instance.
    def device_diagnostics
      @device_diagnostics ||= DeviceDiagnosticsController.new @global_configuration
    end

    # Access to device_profile_management controller.
    # @return [DeviceProfileManagementController] Returns the controller instance.
    def device_profile_management
      @device_profile_management ||= DeviceProfileManagementController.new @global_configuration
    end

    # Access to device_monitoring controller.
    # @return [DeviceMonitoringController] Returns the controller instance.
    def device_monitoring
      @device_monitoring ||= DeviceMonitoringController.new @global_configuration
    end

    # Access to e_uicc_device_profile_management controller.
    # @return [EUICCDeviceProfileManagementController] Returns the controller instance.
    def e_uicc_device_profile_management
      @e_uicc_device_profile_management ||= EUICCDeviceProfileManagementController.new @global_configuration
    end

    # Access to devices_locations controller.
    # @return [DevicesLocationsController] Returns the controller instance.
    def devices_locations
      @devices_locations ||= DevicesLocationsController.new @global_configuration
    end

    # Access to exclusions controller.
    # @return [ExclusionsController] Returns the controller instance.
    def exclusions
      @exclusions ||= ExclusionsController.new @global_configuration
    end

    # Access to devices_location_subscriptions controller.
    # @return [DevicesLocationSubscriptionsController] Returns the controller instance.
    def devices_location_subscriptions
      @devices_location_subscriptions ||= DevicesLocationSubscriptionsController.new @global_configuration
    end

    # Access to device_location_callbacks controller.
    # @return [DeviceLocationCallbacksController] Returns the controller instance.
    def device_location_callbacks
      @device_location_callbacks ||= DeviceLocationCallbacksController.new @global_configuration
    end

    # Access to usage_trigger_management controller.
    # @return [UsageTriggerManagementController] Returns the controller instance.
    def usage_trigger_management
      @usage_trigger_management ||= UsageTriggerManagementController.new @global_configuration
    end

    # Access to billing controller.
    # @return [BillingController] Returns the controller instance.
    def billing
      @billing ||= BillingController.new @global_configuration
    end

    # Access to software_management_subscriptions_v1 controller.
    # @return [SoftwareManagementSubscriptionsV1Controller] Returns the controller instance.
    def software_management_subscriptions_v1
      @software_management_subscriptions_v1 ||= SoftwareManagementSubscriptionsV1Controller.new @global_configuration
    end

    # Access to software_management_licenses_v1 controller.
    # @return [SoftwareManagementLicensesV1Controller] Returns the controller instance.
    def software_management_licenses_v1
      @software_management_licenses_v1 ||= SoftwareManagementLicensesV1Controller.new @global_configuration
    end

    # Access to firmware_v1 controller.
    # @return [FirmwareV1Controller] Returns the controller instance.
    def firmware_v1
      @firmware_v1 ||= FirmwareV1Controller.new @global_configuration
    end

    # Access to software_management_callbacks_v1 controller.
    # @return [SoftwareManagementCallbacksV1Controller] Returns the controller instance.
    def software_management_callbacks_v1
      @software_management_callbacks_v1 ||= SoftwareManagementCallbacksV1Controller.new @global_configuration
    end

    # Access to software_management_reports_v1 controller.
    # @return [SoftwareManagementReportsV1Controller] Returns the controller instance.
    def software_management_reports_v1
      @software_management_reports_v1 ||= SoftwareManagementReportsV1Controller.new @global_configuration
    end

    # Access to software_management_subscriptions_v2 controller.
    # @return [SoftwareManagementSubscriptionsV2Controller] Returns the controller instance.
    def software_management_subscriptions_v2
      @software_management_subscriptions_v2 ||= SoftwareManagementSubscriptionsV2Controller.new @global_configuration
    end

    # Access to software_management_licenses_v2 controller.
    # @return [SoftwareManagementLicensesV2Controller] Returns the controller instance.
    def software_management_licenses_v2
      @software_management_licenses_v2 ||= SoftwareManagementLicensesV2Controller.new @global_configuration
    end

    # Access to campaigns_v2 controller.
    # @return [CampaignsV2Controller] Returns the controller instance.
    def campaigns_v2
      @campaigns_v2 ||= CampaignsV2Controller.new @global_configuration
    end

    # Access to software_management_callbacks_v2 controller.
    # @return [SoftwareManagementCallbacksV2Controller] Returns the controller instance.
    def software_management_callbacks_v2
      @software_management_callbacks_v2 ||= SoftwareManagementCallbacksV2Controller.new @global_configuration
    end

    # Access to software_management_reports_v2 controller.
    # @return [SoftwareManagementReportsV2Controller] Returns the controller instance.
    def software_management_reports_v2
      @software_management_reports_v2 ||= SoftwareManagementReportsV2Controller.new @global_configuration
    end

    # Access to client_logging controller.
    # @return [ClientLoggingController] Returns the controller instance.
    def client_logging
      @client_logging ||= ClientLoggingController.new @global_configuration
    end

    # Access to server_logging controller.
    # @return [ServerLoggingController] Returns the controller instance.
    def server_logging
      @server_logging ||= ServerLoggingController.new @global_configuration
    end

    # Access to configuration_files controller.
    # @return [ConfigurationFilesController] Returns the controller instance.
    def configuration_files
      @configuration_files ||= ConfigurationFilesController.new @global_configuration
    end

    # Access to software_management_subscriptions_v3 controller.
    # @return [SoftwareManagementSubscriptionsV3Controller] Returns the controller instance.
    def software_management_subscriptions_v3
      @software_management_subscriptions_v3 ||= SoftwareManagementSubscriptionsV3Controller.new @global_configuration
    end

    # Access to software_management_licenses_v3 controller.
    # @return [SoftwareManagementLicensesV3Controller] Returns the controller instance.
    def software_management_licenses_v3
      @software_management_licenses_v3 ||= SoftwareManagementLicensesV3Controller.new @global_configuration
    end

    # Access to campaigns_v3 controller.
    # @return [CampaignsV3Controller] Returns the controller instance.
    def campaigns_v3
      @campaigns_v3 ||= CampaignsV3Controller.new @global_configuration
    end

    # Access to software_management_reports_v3 controller.
    # @return [SoftwareManagementReportsV3Controller] Returns the controller instance.
    def software_management_reports_v3
      @software_management_reports_v3 ||= SoftwareManagementReportsV3Controller.new @global_configuration
    end

    # Access to firmware_v3 controller.
    # @return [FirmwareV3Controller] Returns the controller instance.
    def firmware_v3
      @firmware_v3 ||= FirmwareV3Controller.new @global_configuration
    end

    # Access to account_devices controller.
    # @return [AccountDevicesController] Returns the controller instance.
    def account_devices
      @account_devices ||= AccountDevicesController.new @global_configuration
    end

    # Access to software_management_callbacks_v3 controller.
    # @return [SoftwareManagementCallbacksV3Controller] Returns the controller instance.
    def software_management_callbacks_v3
      @software_management_callbacks_v3 ||= SoftwareManagementCallbacksV3Controller.new @global_configuration
    end

    # Access to sim_secure_for_io_t_licenses controller.
    # @return [SIMSecureForIoTLicensesController] Returns the controller instance.
    def sim_secure_for_io_t_licenses
      @sim_secure_for_io_t_licenses ||= SIMSecureForIoTLicensesController.new @global_configuration
    end

    # Access to account_subscriptions controller.
    # @return [AccountSubscriptionsController] Returns the controller instance.
    def account_subscriptions
      @account_subscriptions ||= AccountSubscriptionsController.new @global_configuration
    end

    # Access to performance_metrics controller.
    # @return [PerformanceMetricsController] Returns the controller instance.
    def performance_metrics
      @performance_metrics ||= PerformanceMetricsController.new @global_configuration
    end

    # Access to diagnostics_subscriptions controller.
    # @return [DiagnosticsSubscriptionsController] Returns the controller instance.
    def diagnostics_subscriptions
      @diagnostics_subscriptions ||= DiagnosticsSubscriptionsController.new @global_configuration
    end

    # Access to diagnostics_observations controller.
    # @return [DiagnosticsObservationsController] Returns the controller instance.
    def diagnostics_observations
      @diagnostics_observations ||= DiagnosticsObservationsController.new @global_configuration
    end

    # Access to diagnostics_history controller.
    # @return [DiagnosticsHistoryController] Returns the controller instance.
    def diagnostics_history
      @diagnostics_history ||= DiagnosticsHistoryController.new @global_configuration
    end

    # Access to diagnostics_settings controller.
    # @return [DiagnosticsSettingsController] Returns the controller instance.
    def diagnostics_settings
      @diagnostics_settings ||= DiagnosticsSettingsController.new @global_configuration
    end

    # Access to diagnostics_callbacks controller.
    # @return [DiagnosticsCallbacksController] Returns the controller instance.
    def diagnostics_callbacks
      @diagnostics_callbacks ||= DiagnosticsCallbacksController.new @global_configuration
    end

    # Access to diagnostics_factory_reset controller.
    # @return [DiagnosticsFactoryResetController] Returns the controller instance.
    def diagnostics_factory_reset
      @diagnostics_factory_reset ||= DiagnosticsFactoryResetController.new @global_configuration
    end

    # Access to targets controller.
    # @return [TargetsController] Returns the controller instance.
    def targets
      @targets ||= TargetsController.new @global_configuration
    end

    # Access to cloud_connector_subscriptions controller.
    # @return [CloudConnectorSubscriptionsController] Returns the controller instance.
    def cloud_connector_subscriptions
      @cloud_connector_subscriptions ||= CloudConnectorSubscriptionsController.new @global_configuration
    end

    # Access to cloud_connector_devices controller.
    # @return [CloudConnectorDevicesController] Returns the controller instance.
    def cloud_connector_devices
      @cloud_connector_devices ||= CloudConnectorDevicesController.new @global_configuration
    end

    # Access to device_service_management controller.
    # @return [DeviceServiceManagementController] Returns the controller instance.
    def device_service_management
      @device_service_management ||= DeviceServiceManagementController.new @global_configuration
    end

    # Access to device_reports controller.
    # @return [DeviceReportsController] Returns the controller instance.
    def device_reports
      @device_reports ||= DeviceReportsController.new @global_configuration
    end

    # Access to hyper_precise_location_callbacks controller.
    # @return [HyperPreciseLocationCallbacksController] Returns the controller instance.
    def hyper_precise_location_callbacks
      @hyper_precise_location_callbacks ||= HyperPreciseLocationCallbacksController.new @global_configuration
    end

    # Access to anomaly_settings controller.
    # @return [AnomalySettingsController] Returns the controller instance.
    def anomaly_settings
      @anomaly_settings ||= AnomalySettingsController.new @global_configuration
    end

    # Access to anomaly_triggers controller.
    # @return [AnomalyTriggersController] Returns the controller instance.
    def anomaly_triggers
      @anomaly_triggers ||= AnomalyTriggersController.new @global_configuration
    end

    # Access to anomaly_triggers_v2 controller.
    # @return [AnomalyTriggersV2Controller] Returns the controller instance.
    def anomaly_triggers_v2
      @anomaly_triggers_v2 ||= AnomalyTriggersV2Controller.new @global_configuration
    end

    # Access to wireless_network_performance controller.
    # @return [WirelessNetworkPerformanceController] Returns the controller instance.
    def wireless_network_performance
      @wireless_network_performance ||= WirelessNetworkPerformanceController.new @global_configuration
    end

    # Access to fixed_wireless_qualification controller.
    # @return [FixedWirelessQualificationController] Returns the controller instance.
    def fixed_wireless_qualification
      @fixed_wireless_qualification ||= FixedWirelessQualificationController.new @global_configuration
    end

    # Access to managing_e_sim_profiles controller.
    # @return [ManagingESIMProfilesController] Returns the controller instance.
    def managing_e_sim_profiles
      @managing_e_sim_profiles ||= ManagingESIMProfilesController.new @global_configuration
    end

    # Access to device_sms_messaging controller.
    # @return [DeviceSMSMessagingController] Returns the controller instance.
    def device_sms_messaging
      @device_sms_messaging ||= DeviceSMSMessagingController.new @global_configuration
    end

    # Access to device_actions controller.
    # @return [DeviceActionsController] Returns the controller instance.
    def device_actions
      @device_actions ||= DeviceActionsController.new @global_configuration
    end

    # Access to thing_space_quality_of_service_api_actions controller.
    # @return [ThingSpaceQualityOfServiceAPIActionsController] Returns the controller instance.
    def thing_space_quality_of_service_api_actions
      @thing_space_quality_of_service_api_actions ||= ThingSpaceQualityOfServiceAPIActionsController.new @global_configuration
    end

    # Access to mec controller.
    # @return [MECController] Returns the controller instance.
    def mec
      @mec ||= MECController.new @global_configuration
    end

    # Access to promotion_period_information controller.
    # @return [PromotionPeriodInformationController] Returns the controller instance.
    def promotion_period_information
      @promotion_period_information ||= PromotionPeriodInformationController.new @global_configuration
    end

    # Access to retrieve_the_triggers controller.
    # @return [RetrieveTheTriggersController] Returns the controller instance.
    def retrieve_the_triggers
      @retrieve_the_triggers ||= RetrieveTheTriggersController.new @global_configuration
    end

    # Access to update_triggers controller.
    # @return [UpdateTriggersController] Returns the controller instance.
    def update_triggers
      @update_triggers ||= UpdateTriggersController.new @global_configuration
    end

    # Access to sim_actions controller.
    # @return [SIMActionsController] Returns the controller instance.
    def sim_actions
      @sim_actions ||= SIMActionsController.new @global_configuration
    end

    # Access to global_reporting controller.
    # @return [GlobalReportingController] Returns the controller instance.
    def global_reporting
      @global_reporting ||= GlobalReportingController.new @global_configuration
    end

    # Access to oauth_authorization controller.
    # @return [OauthAuthorizationController] Returns the controller instance.
    def oauth_authorization
      @oauth_authorization ||= OauthAuthorizationController.new @global_configuration
    end

    def initialize(
      connection: nil, adapter: :net_http_persistent, timeout: 60,
      max_retries: 0, retry_interval: 1, backoff_factor: 2,
      retry_statuses: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
      retry_methods: %i[get put], http_callback: nil,
      environment: Environment::PRODUCTION, oauth_client_id: nil,
      oauth_client_secret: nil, oauth_token: nil, oauth_scopes: nil,
      client_credentials_auth_credentials: nil, vz_m2m_token: 'TODO: Replace',
      config: nil
    )
      @config = if config.nil?
                  Configuration.new(
                    connection: connection, adapter: adapter, timeout: timeout,
                    max_retries: max_retries, retry_interval: retry_interval,
                    backoff_factor: backoff_factor,
                    retry_statuses: retry_statuses,
                    retry_methods: retry_methods, http_callback: http_callback,
                    environment: environment, oauth_client_id: oauth_client_id,
                    oauth_client_secret: oauth_client_secret,
                    oauth_token: oauth_token, oauth_scopes: oauth_scopes,
                    client_credentials_auth_credentials: client_credentials_auth_credentials,
                    vz_m2m_token: vz_m2m_token
                  )
                else
                  config
                end

      @global_configuration = GlobalConfiguration.new(client_configuration: @config)
                                                 .base_uri_executor(@config.method(:get_base_uri))
                                                 .global_errors(BaseController::GLOBAL_ERRORS)
                                                 .user_agent(BaseController.user_agent)
                                                 .global_header('VZ-M2M-Token', @config.vz_m2m_token)

      initialize_auth_managers(@global_configuration)
      @global_configuration = @global_configuration.auth_managers(@auth_managers)
    end

    # Initializes the auth managers hash used for authenticating API calls.
    # @param [GlobalConfiguration] global_config The global configuration of the SDK)
    def initialize_auth_managers(global_config)
      @auth_managers = {}
      http_client_config = global_config.client_configuration
      %w[oAuth2].each { |auth| @auth_managers[auth] = nil }
      @auth_managers['oAuth2'] = Oauth2.new(http_client_config.client_credentials_auth_credentials,
                                            global_config)
    end
  end
end
