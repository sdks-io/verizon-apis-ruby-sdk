# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DiagnosticsObservationsController
  class DiagnosticsObservationsController < BaseController
    # This endpoint allows the user to start or change observe diagnostics.
    # @param [ObservationRequest] body Required parameter: Request for device
    # observation information.
    # @return [DiagnosticsObservationResult] response from the API call
    def start_diagnostics_observation(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/devices/attributes/actions/observe',
                                     Server::DEVICE_DIAGNOSTICS)
                   .header_param(new_parameter('*/*', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(DiagnosticsObservationResult.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response.',
                                DeviceDiagnosticsResultException))
        .execute
    end

    # This endpoint allows the user to stop or reset observe diagnostics.
    # @param [String] transaction_id Required parameter: The ID value associated
    # with the transaction.
    # @param [String] account_name Required parameter: The numeric account
    # name.
    # @return [DiagnosticsObservationResult] response from the API call
    def stop_diagnostics_observation(transaction_id,
                                     account_name)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/devices/attributes/actions/observe',
                                     Server::DEVICE_DIAGNOSTICS)
                   .query_param(new_parameter(transaction_id, key: 'transactionId'))
                   .query_param(new_parameter(account_name, key: 'accountName'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(DiagnosticsObservationResult.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response.',
                                DeviceDiagnosticsResultException))
        .execute
    end
  end
end
