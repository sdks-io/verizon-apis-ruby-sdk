# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # SoftwareManagementSubscriptionsV1Controller
  class SoftwareManagementSubscriptionsV1Controller < BaseController
    # This subscriptions endpoint retrieves an account's current Software
    # Management Service subscription status.
    # @param [String] account Required parameter: Account identifier in
    # "##########-#####".
    # @return [V1AccountSubscription] response from the API call
    def get_account_subscription_status(account)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/subscriptions/{account}',
                                     Server::SOFTWARE_MANAGEMENT_V1)
                   .template_param(new_parameter(account, key: 'account')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(V1AccountSubscription.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Unexpected error.',
                                FotaV1ResultException))
        .execute
    end

    # Returns information about an account's Software Management Services
    # licenses and a list of licensed devices.
    # @param [String] account Required parameter: Account identifier in
    # "##########-#####".
    # @param [String] start_index Required parameter: The zero-based number of
    # the first record to return. Set startIndex=0 for the first request. If
    # there are more than 1,000 devices in the response, set startIndex=1000 for
    # the second request, 2000 for the third request, etc.
    # @return [AccountLicenseInfo] response from the API call
    def get_account_license_status(account,
                                   start_index)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/licenses/{account}/index/{startIndex}',
                                     Server::SOFTWARE_MANAGEMENT_V1)
                   .template_param(new_parameter(account, key: 'account')
                                    .should_encode(true))
                   .template_param(new_parameter(start_index, key: 'startIndex')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AccountLicenseInfo.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Unexpected error.',
                                FotaV1ResultException))
        .execute
    end
  end
end
