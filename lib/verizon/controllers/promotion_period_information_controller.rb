# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # PromotionPeriodInformationController
  class PromotionPeriodInformationController < BaseController
    # Retrieves the usage history of a device during the promotion period.
    # @param [RequestBodyForUsage] body Required parameter: Retrieve Aggregate
    # Usage
    # @return [ResponseToUsageQuery] response from the API call
    def get_promo_device_usage_history(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/m2m/v1/devices/usage/actions/promodeviceusage',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(ResponseToUsageQuery.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'All error responses will be in this format',
                                ReadySimRestErrorResponseException))
        .execute
    end

    # Retrieves the aggregate usage for an account using pseudo-MDN during the
    # promotional period using a callback.
    # @param [UsageRequestBody] body Required parameter: Retrieve Aggregate
    # Usage
    # @return [UsageRequestResponse] response from the API call
    def get_promo_device_aggregate_usage_history(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/m2m/v1/devices/usage/actions/promoaggregateusage',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(UsageRequestResponse.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response',
                                ReadySimRestErrorResponseException))
        .execute
    end
  end
end
