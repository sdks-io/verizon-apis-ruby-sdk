# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # SessionManagementController
  class SessionManagementController < BaseController
    # Initiates a Connectivity Management session and returns a VZ-M2M session
    # token that is required in subsequent API requests.
    # @param [LogInRequest] body Optional parameter: Request to initiate a
    # session.
    # @return [LogInResult] response from the API call
    def start_connectivity_management_session(body: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/v1/session/login',
                                     Server::M2M)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(LogInResult.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Error response.',
                                ConnectivityManagementResultException))
        .execute
    end

    # Ends a Connectivity Management session.
    # @return [LogOutRequest] response from the API call
    def end_connectivity_management_session
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/v1/session/logout',
                                     Server::M2M)
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(LogOutRequest.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Error response.',
                                ConnectivityManagementResultException))
        .execute
    end

    # The new password is effective immediately. Passwords do not expire, but
    # Verizon recommends changing your password every 90 days.
    # @param [SessionResetPasswordRequest] body Required parameter: Request with
    # current password that needs to be reset.
    # @return [SessionResetPasswordResult] response from the API call
    def reset_connectivity_management_password(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/v1/session/password/actions/reset',
                                     Server::M2M)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(SessionResetPasswordResult.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Error response.',
                                ConnectivityManagementResultException))
        .execute
    end
  end
end
