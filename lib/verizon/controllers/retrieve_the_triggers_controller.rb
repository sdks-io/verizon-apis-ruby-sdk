# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # RetrieveTheTriggersController
  class RetrieveTheTriggersController < BaseController
    # Retrieves all of the available triggers for pseudo-MDN.
    # @return [TriggerValueResponse] response from the API call
    def get_all_available_triggers
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/m2m/v2/triggers',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(TriggerValueResponse.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response',
                                ReadySimRestErrorResponseException))
        .execute
    end

    # Retrieve the triggers associated with an account name.
    # @param [String] account_name Required parameter: The account name
    # @return [TriggerValueResponse] response from the API call
    def get_all_triggers_by_account_name(account_name)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/m2m/v2/triggers/accounts/{accountName}',
                                     Server::THINGSPACE)
                   .template_param(new_parameter(account_name, key: 'accountName')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(TriggerValueResponse.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response',
                                ReadySimRestErrorResponseException))
        .execute
    end

    # Retrieves all of the triggers for the specified account associated with
    # the PromoAlert category
    # @return [TriggerValueResponse2] response from the API call
    def get_all_triggers_by_trigger_category
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/m2m/v2/triggers/categories/PromoAlerts',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(TriggerValueResponse2.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response',
                                ReadySimRestErrorResponseException))
        .execute
    end

    # Retrives a specific trigger by its ID.
    # @param [String] trigger_id Required parameter: The ID of a specific
    # trigger
    # @return [TriggerValueResponse2] response from the API call
    def get_triggers_by_id(trigger_id)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/m2m/v2/triggers/{triggerId}',
                                     Server::THINGSPACE)
                   .template_param(new_parameter(trigger_id, key: 'triggerId')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(TriggerValueResponse2.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response',
                                ReadySimRestErrorResponseException))
        .execute
    end
  end
end
