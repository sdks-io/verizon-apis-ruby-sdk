# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # CloudConnectorSubscriptionsController
  class CloudConnectorSubscriptionsController < BaseController
    # Create a subscription to define a streaming channel that sends data from
    # devices in the account to an endpoint defined in a target resource.
    # @param [CreateSubscriptionRequest] body Required parameter: The request
    # body provides the details of the subscription that you want to create.
    # @return [Subscription] response from the API call
    def create_subscription(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/subscriptions',
                                     Server::CLOUD_CONNECTOR)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(Subscription.method(:from_hash))
                   .is_api_response(true))
        .execute
    end

    # Search for subscriptions by property values. Returns an array of all
    # matching subscription resources.
    # @param [QuerySubscriptionRequest] body Required parameter: The request
    # body specifies fields and values to match.
    # @return [Array[Subscription]] response from the API call
    def query_subscription(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/subscriptions/actions/query',
                                     Server::CLOUD_CONNECTOR)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(Subscription.method(:from_hash))
                   .is_api_response(true)
                   .is_response_array(true))
        .execute
    end

    # Remove a subscription from a ThingSpace account.
    # @param [DeleteSubscriptionRequest] body Required parameter: The request
    # body identifies the subscription to delete.
    # @return [void] response from the API call
    def delete_subscription(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/subscriptions/actions/delete',
                                     Server::CLOUD_CONNECTOR)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('global')))
        .response(new_response_handler
                   .is_response_void(true)
                   .is_api_response(true))
        .execute
    end
  end
end
