# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # M5gBIDeviceActionsController
  class M5gBIDeviceActionsController < BaseController
    # Uses the decive's Integrated Circuit Card Identification Number (ICCID) to
    # retrive and display the device's properties.
    # @param [M5gBideviceId] body Required parameter: Device Profile Query
    # @return [ApiResponse]  the complete http response with raw body and status code.
    def business_internetlist_device_information(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/actions/list',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Or.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(M5gBideviceDetailsresponse.method(:from_hash))
                    .is_api_response(true)
                    .local_error('default',
                                 'Error response',
                                 M5gBiRestErrorResponseException))
        .execute
    end

    # Uses the device's ICCID and IMEI to activate service.
    # @param [M5gBiactivateRequest] body Required parameter: Activate 5G BI
    # service. Defining <code>publicIpRestriction</code> as "Unrestricted" or
    # "Restricted" is required for activating as Public Static. Leave
    # <code>publicIpRestriction</code> undefined to activate as Public Dynamic.
    # Removing <code>publicIpRestriction</code> from the request will activate
    # as Mobile Private Network (MPN).
    # @return [ApiResponse]  the complete http response with raw body and status code.
    def business_internetactivate_using_post(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/actions/activate',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Or.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(M5gBiRequestResponse.method(:from_hash))
                    .is_api_response(true)
                    .local_error('default',
                                 'Error response',
                                 M5gBiRestErrorResponseException))
        .execute
    end

    # Change a device's service plan to use 5G BI.
    # @param [M5gBichangeRequest] body Required parameter: This endpoint is for
    # use when changing a device's service plan to a 5G BI service plan. The
    # service plan can change for an active device up to four times per month
    # but will require address validation for each change. The service plan
    # cannot be changed for a device while its service is suspended.
    # @return [ApiResponse]  the complete http response with raw body and status code.
    def business_internet_serviceplanchange(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/actions/plan',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Or.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(M5gBiRequestResponse.method(:from_hash))
                    .is_api_response(true)
                    .local_error('default',
                                 'Error response',
                                 M5gBiRestErrorResponseException))
        .execute
    end
  end
end
