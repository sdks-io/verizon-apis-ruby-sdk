# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # AnomalyTriggersController
  class AnomalyTriggersController < BaseController
    # This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.
    # @return [Array[GetTriggerResponseList]] response from the API call
    def list_anomaly_detection_triggers
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/m2m/v1/triggers',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetTriggerResponseList.method(:from_hash))
                   .is_api_response(true)
                   .is_response_array(true)
                   .local_error('400',
                                'Bad request',
                                IntelligenceResultException)
                   .local_error('401',
                                'Unauthorized',
                                IntelligenceResultException)
                   .local_error('403',
                                'Forbidden',
                                IntelligenceResultException)
                   .local_error('404',
                                'Not Found / Does not exist',
                                IntelligenceResultException)
                   .local_error('406',
                                'Format / Request Unacceptable',
                                IntelligenceResultException)
                   .local_error('429',
                                'Too many requests',
                                IntelligenceResultException)
                   .local_error('default',
                                'Error response',
                                IntelligenceResultException))
        .execute
    end

    # This corresponds to the M2M-MC SOAP interface, ```UpdateTriggerRequest```.
    # @param [UpdateTriggerRequest] body Required parameter: Update Trigger
    # Request
    # @return [AnomalyDetectionTrigger] response from the API call
    def update_anomaly_detection_trigger(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/m2m/v1/triggers',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AnomalyDetectionTrigger.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Bad request',
                                IntelligenceResultException)
                   .local_error('401',
                                'Unauthorized',
                                IntelligenceResultException)
                   .local_error('403',
                                'Forbidden',
                                IntelligenceResultException)
                   .local_error('404',
                                'Not Found / Does not exist',
                                IntelligenceResultException)
                   .local_error('406',
                                'Format / Request Unacceptable',
                                IntelligenceResultException)
                   .local_error('429',
                                'Too many requests',
                                IntelligenceResultException)
                   .local_error('default',
                                'Error response',
                                IntelligenceResultException))
        .execute
    end

    # This corresponds to the M2M-MC SOAP interface, ```CreateTrigger```.
    # @param [CreateTriggerRequest] body Required parameter: Create Trigger
    # Request
    # @return [AnomalyDetectionTrigger] response from the API call
    def create_anomaly_detection_trigger(body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/m2m/v1/triggers',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AnomalyDetectionTrigger.method(:from_hash))
                   .is_api_response(true)
                   .local_error('400',
                                'Bad request',
                                IntelligenceResultException)
                   .local_error('401',
                                'Unauthorized',
                                IntelligenceResultException)
                   .local_error('403',
                                'Forbidden',
                                IntelligenceResultException)
                   .local_error('404',
                                'Not Found / Does not exist',
                                IntelligenceResultException)
                   .local_error('406',
                                'Format / Request Unacceptable',
                                IntelligenceResultException)
                   .local_error('429',
                                'Too many requests',
                                IntelligenceResultException)
                   .local_error('default',
                                'Error response',
                                IntelligenceResultException))
        .execute
    end

    # This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.
    # @param [String] trigger_id Required parameter: trigger ID
    # @return [Array[GetTriggerResponseList]] response from the API call
    def list_anomaly_detection_trigger_settings(trigger_id)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/m2m/v1/triggers/{triggerId}',
                                     Server::THINGSPACE)
                   .template_param(new_parameter(trigger_id, key: 'triggerId')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetTriggerResponseList.method(:from_hash))
                   .is_api_response(true)
                   .is_response_array(true)
                   .local_error('400',
                                'Bad request',
                                IntelligenceResultException)
                   .local_error('401',
                                'Unauthorized',
                                IntelligenceResultException)
                   .local_error('403',
                                'Forbidden',
                                IntelligenceResultException)
                   .local_error('404',
                                'Not Found / Does not exist',
                                IntelligenceResultException)
                   .local_error('406',
                                'Format / Request Unacceptable',
                                IntelligenceResultException)
                   .local_error('429',
                                'Too many requests',
                                IntelligenceResultException)
                   .local_error('default',
                                'Error response',
                                IntelligenceResultException))
        .execute
    end

    # Deletes a specific trigger ID
    # @param [String] trigger_id Required parameter: The trigger ID to be
    # deleted
    # @return [AnomalyDetectionTrigger] response from the API call
    def delete_anomaly_detection_trigger(trigger_id)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/m2m/v1/triggers/{triggerId}',
                                     Server::THINGSPACE)
                   .template_param(new_parameter(trigger_id, key: 'triggerId')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AnomalyDetectionTrigger.method(:from_hash))
                   .is_api_response(true)
                   .local_error('default',
                                'Error response',
                                IntelligenceResultException))
        .execute
    end
  end
end
