# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Request for listing account devices.
  class AccountDeviceListRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The billing account for which a list of devices is returned. If you don't
    # specify an accountName, the list includes all devices to which you have
    # access.
    # @return [String]
    attr_accessor :account_name

    # An identifier for a single device.
    # @return [DeviceId]
    attr_accessor :device_id

    # Filter for a list of devices.
    # @return [AccountDeviceListFilter]
    attr_accessor :filter

    # The name of a device state, to only include devices in that state.
    # @return [String]
    attr_accessor :current_state

    # Custom field names and values, if you want to only include devices that
    # have matching values.
    # @return [Array[CustomFields]]
    attr_accessor :custom_fields

    # Only include devices that were added after this date and time.
    # @return [String]
    attr_accessor :earliest

    # Only include devices that are in this device group.
    # @return [String]
    attr_accessor :group_name

    # Only include devices that were added before this date and time.
    # @return [String]
    attr_accessor :latest

    # Only include devices that have this service plan.
    # @return [String]
    attr_accessor :service_plan

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['device_id'] = 'deviceId'
      @_hash['filter'] = 'filter'
      @_hash['current_state'] = 'currentState'
      @_hash['custom_fields'] = 'customFields'
      @_hash['earliest'] = 'earliest'
      @_hash['group_name'] = 'groupName'
      @_hash['latest'] = 'latest'
      @_hash['service_plan'] = 'servicePlan'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        device_id
        filter
        current_state
        custom_fields
        earliest
        group_name
        latest
        service_plan
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   device_id = SKIP,
                   filter = SKIP,
                   current_state = SKIP,
                   custom_fields = SKIP,
                   earliest = SKIP,
                   group_name = SKIP,
                   latest = SKIP,
                   service_plan = SKIP)
      @account_name = account_name unless account_name == SKIP
      @device_id = device_id unless device_id == SKIP
      @filter = filter unless filter == SKIP
      @current_state = current_state unless current_state == SKIP
      @custom_fields = custom_fields unless custom_fields == SKIP
      @earliest = earliest unless earliest == SKIP
      @group_name = group_name unless group_name == SKIP
      @latest = latest unless latest == SKIP
      @service_plan = service_plan unless service_plan == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      device_id = DeviceId.from_hash(hash['deviceId']) if hash['deviceId']
      filter = AccountDeviceListFilter.from_hash(hash['filter']) if hash['filter']
      current_state = hash.key?('currentState') ? hash['currentState'] : SKIP
      # Parameter is an array, so we need to iterate through it
      custom_fields = nil
      unless hash['customFields'].nil?
        custom_fields = []
        hash['customFields'].each do |structure|
          custom_fields << (CustomFields.from_hash(structure) if structure)
        end
      end

      custom_fields = SKIP unless hash.key?('customFields')
      earliest = hash.key?('earliest') ? hash['earliest'] : SKIP
      group_name = hash.key?('groupName') ? hash['groupName'] : SKIP
      latest = hash.key?('latest') ? hash['latest'] : SKIP
      service_plan = hash.key?('servicePlan') ? hash['servicePlan'] : SKIP

      # Create object from extracted values.
      AccountDeviceListRequest.new(account_name,
                                   device_id,
                                   filter,
                                   current_state,
                                   custom_fields,
                                   earliest,
                                   group_name,
                                   latest,
                                   service_plan)
    end
  end
end
