# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The request body identifies the devices to upload.
  class UploadsActivatesDeviceRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The name of a billing account. An account name is usually numeric, and
    # must include any leading zeros.
    # @return [String]
    attr_accessor :account_name

    # The email address that the report should be sent to when the upload is
    # complete.
    # @return [String]
    attr_accessor :email_address

    # The stock keeping unit that identifies the type of devices in the upload
    # and activation.
    # @return [String]
    attr_accessor :device_sku

    # The format of the device identifiers in the upload and activation.
    # @return [String]
    attr_accessor :upload_type

    # The service plan code that you want to assign to all specified devices.
    # @return [String]
    attr_accessor :service_plan

    # The pool from which your device IP addresses is derived.
    # @return [String]
    attr_accessor :carrier_ip_pool_name

    # The Zip code of the location where the line of service is primarily used,
    # or a Zip code that you have been told to use with these devices.
    # @return [String]
    attr_accessor :mdn_zip_code

    # The devices to upload, specified by device IDs in a format matching
    # uploadType.
    # @return [Array[DeviceList]]
    attr_accessor :devices

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['email_address'] = 'emailAddress'
      @_hash['device_sku'] = 'deviceSku'
      @_hash['upload_type'] = 'uploadType'
      @_hash['service_plan'] = 'servicePlan'
      @_hash['carrier_ip_pool_name'] = 'carrierIpPoolName'
      @_hash['mdn_zip_code'] = 'mdnZipCode'
      @_hash['devices'] = 'devices'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        carrier_ip_pool_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = nil,
                   email_address = nil,
                   device_sku = nil,
                   upload_type = nil,
                   service_plan = nil,
                   mdn_zip_code = nil,
                   devices = nil,
                   carrier_ip_pool_name = SKIP)
      @account_name = account_name
      @email_address = email_address
      @device_sku = device_sku
      @upload_type = upload_type
      @service_plan = service_plan
      @carrier_ip_pool_name = carrier_ip_pool_name unless carrier_ip_pool_name == SKIP
      @mdn_zip_code = mdn_zip_code
      @devices = devices
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : nil
      email_address = hash.key?('emailAddress') ? hash['emailAddress'] : nil
      device_sku = hash.key?('deviceSku') ? hash['deviceSku'] : nil
      upload_type = hash.key?('uploadType') ? hash['uploadType'] : nil
      service_plan = hash.key?('servicePlan') ? hash['servicePlan'] : nil
      mdn_zip_code = hash.key?('mdnZipCode') ? hash['mdnZipCode'] : nil
      # Parameter is an array, so we need to iterate through it
      devices = nil
      unless hash['devices'].nil?
        devices = []
        hash['devices'].each do |structure|
          devices << (DeviceList.from_hash(structure) if structure)
        end
      end

      devices = nil unless hash.key?('devices')
      carrier_ip_pool_name =
        hash.key?('carrierIpPoolName') ? hash['carrierIpPoolName'] : SKIP

      # Create object from extracted values.
      UploadsActivatesDeviceRequest.new(account_name,
                                        email_address,
                                        device_sku,
                                        upload_type,
                                        service_plan,
                                        mdn_zip_code,
                                        devices,
                                        carrier_ip_pool_name)
    end
  end
end
