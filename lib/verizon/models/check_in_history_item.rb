# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # Check-in history for a device.
  class CheckInHistoryItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Device IMEI.
    # @return [String]
    attr_accessor :device_id

    # Type of client.
    # @return [String]
    attr_accessor :client_type

    # Type of client.
    # @return [String]
    attr_accessor :result

    # Type of client.
    # @return [String]
    attr_accessor :failure_type

    # Type of client.
    # @return [DateTime]
    attr_accessor :time_completed

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['device_id'] = 'deviceId'
      @_hash['client_type'] = 'clientType'
      @_hash['result'] = 'result'
      @_hash['failure_type'] = 'failureType'
      @_hash['time_completed'] = 'timeCompleted'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(device_id = nil,
                   client_type = nil,
                   result = nil,
                   failure_type = nil,
                   time_completed = nil)
      @device_id = device_id
      @client_type = client_type
      @result = result
      @failure_type = failure_type
      @time_completed = time_completed
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      device_id = hash.key?('deviceId') ? hash['deviceId'] : nil
      client_type = hash.key?('clientType') ? hash['clientType'] : nil
      result = hash.key?('result') ? hash['result'] : nil
      failure_type = hash.key?('failureType') ? hash['failureType'] : nil
      time_completed = if hash.key?('timeCompleted')
                         (DateTimeHelper.from_rfc3339(hash['timeCompleted']) if hash['timeCompleted'])
                       end

      # Create object from extracted values.
      CheckInHistoryItem.new(device_id,
                             client_type,
                             result,
                             failure_type,
                             time_completed)
    end

    def to_time_completed
      DateTimeHelper.to_rfc3339(time_completed)
    end
  end
end
