# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Used to filter data by time period or number of devices.
  class HistorySearchRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The selected device and attributes for which a request should retrieve
    # data.
    # @return [HistorySearchFilter]
    attr_accessor :filter

    # The maximum number of historical attributes to include in the response. If
    # the request matches more than this number of attributes, the response will
    # contain an X-Next value in the header that can be used as the page value
    # in the next request to retrieve the next page of events.
    # @return [Integer]
    attr_accessor :limit_number

    # The time period for which a request should retrieve data, beginning with
    # the limitTime.startOn and proceeding with the limitTime.duration.
    # @return [HistorySearchLimitTime]
    attr_accessor :limit_time

    # Page number for pagination purposes.
    # @return [String]
    attr_accessor :page

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['filter'] = '$filter'
      @_hash['limit_number'] = '$limitNumber'
      @_hash['limit_time'] = '$limitTime'
      @_hash['page'] = '$page'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        limit_number
        limit_time
        page
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(filter = nil,
                   limit_number = SKIP,
                   limit_time = SKIP,
                   page = SKIP)
      @filter = filter
      @limit_number = limit_number unless limit_number == SKIP
      @limit_time = limit_time unless limit_time == SKIP
      @page = page unless page == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      filter = HistorySearchFilter.from_hash(hash['$filter']) if hash['$filter']
      limit_number = hash.key?('$limitNumber') ? hash['$limitNumber'] : SKIP
      limit_time = HistorySearchLimitTime.from_hash(hash['$limitTime']) if hash['$limitTime']
      page = hash.key?('$page') ? hash['$page'] : SKIP

      # Create object from extracted values.
      HistorySearchRequest.new(filter,
                               limit_number,
                               limit_time,
                               page)
    end
  end
end
