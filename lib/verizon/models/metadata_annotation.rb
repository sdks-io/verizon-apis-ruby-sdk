# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # MetadataAnnotation Model.
  class MetadataAnnotation < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :node_alpha_kubernetes_io_ttl

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rafay_dev_object_hash

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :volumes_kubernetes_io_controller_managed_attach_detach

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['node_alpha_kubernetes_io_ttl'] = 'node.alpha.kubernetes.io/ttl'
      @_hash['rafay_dev_object_hash'] = 'rafay.dev/object-hash'
      @_hash['volumes_kubernetes_io_controller_managed_attach_detach'] =
        'volumes.kubernetes.io/controller-managed-attach-detach'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        node_alpha_kubernetes_io_ttl
        rafay_dev_object_hash
        volumes_kubernetes_io_controller_managed_attach_detach
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(node_alpha_kubernetes_io_ttl = SKIP,
                   rafay_dev_object_hash = SKIP,
                   volumes_kubernetes_io_controller_managed_attach_detach = SKIP)
      unless node_alpha_kubernetes_io_ttl == SKIP
        @node_alpha_kubernetes_io_ttl =
          node_alpha_kubernetes_io_ttl
      end
      @rafay_dev_object_hash = rafay_dev_object_hash unless rafay_dev_object_hash == SKIP
      unless volumes_kubernetes_io_controller_managed_attach_detach == SKIP
        @volumes_kubernetes_io_controller_managed_attach_detach =
          volumes_kubernetes_io_controller_managed_attach_detach
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      node_alpha_kubernetes_io_ttl =
        hash.key?('node.alpha.kubernetes.io/ttl') ? hash['node.alpha.kubernetes.io/ttl'] : SKIP
      rafay_dev_object_hash =
        hash.key?('rafay.dev/object-hash') ? hash['rafay.dev/object-hash'] : SKIP
      volumes_kubernetes_io_controller_managed_attach_detach =
        hash.key?('volumes.kubernetes.io/controller-managed-attach-detach') ? hash['volumes.kubernetes.io/controller-managed-attach-detach'] : SKIP

      # Create object from extracted values.
      MetadataAnnotation.new(node_alpha_kubernetes_io_ttl,
                             rafay_dev_object_hash,
                             volumes_kubernetes_io_controller_managed_attach_detach)
    end
  end
end
