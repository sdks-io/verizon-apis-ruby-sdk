# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Keyschunk2 Model.
  class Keyschunk2 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :data_percentage50

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :data_percentage75

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :data_percentage90

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :data_percentage100

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :sms_percentage50

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :sms_percentage75

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :sms_percentage90

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :sms_percentage100

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :no_of_days_b4_promo_exp

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['data_percentage50'] = 'dataPercentage50'
      @_hash['data_percentage75'] = 'dataPercentage75'
      @_hash['data_percentage90'] = 'dataPercentage90'
      @_hash['data_percentage100'] = 'dataPercentage100'
      @_hash['sms_percentage50'] = 'smsPercentage50'
      @_hash['sms_percentage75'] = 'smsPercentage75'
      @_hash['sms_percentage90'] = 'smsPercentage90'
      @_hash['sms_percentage100'] = 'smsPercentage100'
      @_hash['no_of_days_b4_promo_exp'] = 'NoOfDaysB4PromoExp'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        data_percentage50
        data_percentage75
        data_percentage90
        data_percentage100
        sms_percentage50
        sms_percentage75
        sms_percentage90
        sms_percentage100
        no_of_days_b4_promo_exp
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(data_percentage50 = SKIP,
                   data_percentage75 = SKIP,
                   data_percentage90 = SKIP,
                   data_percentage100 = SKIP,
                   sms_percentage50 = SKIP,
                   sms_percentage75 = SKIP,
                   sms_percentage90 = SKIP,
                   sms_percentage100 = SKIP,
                   no_of_days_b4_promo_exp = SKIP)
      @data_percentage50 = data_percentage50 unless data_percentage50 == SKIP
      @data_percentage75 = data_percentage75 unless data_percentage75 == SKIP
      @data_percentage90 = data_percentage90 unless data_percentage90 == SKIP
      @data_percentage100 = data_percentage100 unless data_percentage100 == SKIP
      @sms_percentage50 = sms_percentage50 unless sms_percentage50 == SKIP
      @sms_percentage75 = sms_percentage75 unless sms_percentage75 == SKIP
      @sms_percentage90 = sms_percentage90 unless sms_percentage90 == SKIP
      @sms_percentage100 = sms_percentage100 unless sms_percentage100 == SKIP
      @no_of_days_b4_promo_exp = no_of_days_b4_promo_exp unless no_of_days_b4_promo_exp == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      data_percentage50 =
        hash.key?('dataPercentage50') ? hash['dataPercentage50'] : SKIP
      data_percentage75 =
        hash.key?('dataPercentage75') ? hash['dataPercentage75'] : SKIP
      data_percentage90 =
        hash.key?('dataPercentage90') ? hash['dataPercentage90'] : SKIP
      data_percentage100 =
        hash.key?('dataPercentage100') ? hash['dataPercentage100'] : SKIP
      sms_percentage50 =
        hash.key?('smsPercentage50') ? hash['smsPercentage50'] : SKIP
      sms_percentage75 =
        hash.key?('smsPercentage75') ? hash['smsPercentage75'] : SKIP
      sms_percentage90 =
        hash.key?('smsPercentage90') ? hash['smsPercentage90'] : SKIP
      sms_percentage100 =
        hash.key?('smsPercentage100') ? hash['smsPercentage100'] : SKIP
      no_of_days_b4_promo_exp =
        hash.key?('NoOfDaysB4PromoExp') ? hash['NoOfDaysB4PromoExp'] : SKIP

      # Create object from extracted values.
      Keyschunk2.new(data_percentage50,
                     data_percentage75,
                     data_percentage90,
                     data_percentage100,
                     sms_percentage50,
                     sms_percentage75,
                     sms_percentage90,
                     sms_percentage100,
                     no_of_days_b4_promo_exp)
    end
  end
end
