# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Service associated with the account.
  class AccountService < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The name of the service plan.
    # @return [String]
    attr_accessor :name

    # The description of the service plan.
    # @return [String]
    attr_accessor :description

    # The state of the service plan.
    # @return [Array[State]]
    attr_accessor :states

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['description'] = 'description'
      @_hash['states'] = 'states'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        name
        description
        states
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(name = SKIP,
                   description = SKIP,
                   states = SKIP)
      @name = name unless name == SKIP
      @description = description unless description == SKIP
      @states = states unless states == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      # Parameter is an array, so we need to iterate through it
      states = nil
      unless hash['states'].nil?
        states = []
        hash['states'].each do |structure|
          states << (State.from_hash(structure) if structure)
        end
      end

      states = SKIP unless hash.key?('states')

      # Create object from extracted values.
      AccountService.new(name,
                         description,
                         states)
    end
  end
end
