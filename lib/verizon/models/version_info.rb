# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # VersionInfo Model.
  class VersionInfo < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :edge_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organization_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :partner_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :modified_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :nodegroup_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['edge_id'] = 'edge_id'
      @_hash['organization_id'] = 'organization_id'
      @_hash['partner_id'] = 'partner_id'
      @_hash['created_at'] = 'created_at'
      @_hash['modified_at'] = 'modified_at'
      @_hash['id'] = 'id'
      @_hash['nodegroup_id'] = 'nodegroup_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        edge_id
        organization_id
        partner_id
        created_at
        modified_at
        id
        nodegroup_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(edge_id = SKIP,
                   organization_id = SKIP,
                   partner_id = SKIP,
                   created_at = SKIP,
                   modified_at = SKIP,
                   id = SKIP,
                   nodegroup_id = SKIP)
      @edge_id = edge_id unless edge_id == SKIP
      @organization_id = organization_id unless organization_id == SKIP
      @partner_id = partner_id unless partner_id == SKIP
      @created_at = created_at unless created_at == SKIP
      @modified_at = modified_at unless modified_at == SKIP
      @id = id unless id == SKIP
      @nodegroup_id = nodegroup_id unless nodegroup_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      edge_id = hash.key?('edge_id') ? hash['edge_id'] : SKIP
      organization_id =
        hash.key?('organization_id') ? hash['organization_id'] : SKIP
      partner_id = hash.key?('partner_id') ? hash['partner_id'] : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      modified_at = hash.key?('modified_at') ? hash['modified_at'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      nodegroup_id = hash.key?('nodegroup_id') ? hash['nodegroup_id'] : SKIP

      # Create object from extracted values.
      VersionInfo.new(edge_id,
                      organization_id,
                      partner_id,
                      created_at,
                      modified_at,
                      id,
                      nodegroup_id)
    end
  end
end
