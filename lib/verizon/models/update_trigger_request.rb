# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # UpdateTriggerRequest Model.
  class UpdateTriggerRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :active

    # The details of the UsageAnomaly trigger.
    # @return [AnomalyTriggerRequest]
    attr_accessor :anomaly_trigger_request

    # The details of the UsageAnomaly trigger.
    # @return [CycleTypeEnum]
    attr_accessor :cycle_type

    # The details of the UsageAnomaly trigger.
    # @return [DataTriggerRequest]
    attr_accessor :data_trigger_request

    # The details of the UsageAnomaly trigger.
    # @return [String]
    attr_accessor :group_name

    # The details of the UsageAnomaly trigger.
    # @return [PromoAlertTriggerRequest]
    attr_accessor :promo_alert_trigger_request

    # The details of the UsageAnomaly trigger.
    # @return [SessionTriggerRequest]
    attr_accessor :session_trigger_request

    # The details of the UsageAnomaly trigger.
    # @return [SMSTriggerRequest]
    attr_accessor :sms_trigger_request

    # The details of the UsageAnomaly trigger.
    # @return [String]
    attr_accessor :trigger_category

    # The details of the UsageAnomaly trigger.
    # @return [String]
    attr_accessor :trigger_id

    # The details of the UsageAnomaly trigger.
    # @return [String]
    attr_accessor :trigger_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['active'] = 'active'
      @_hash['anomaly_trigger_request'] = 'anomalyTriggerRequest'
      @_hash['cycle_type'] = 'cycleType'
      @_hash['data_trigger_request'] = 'dataTriggerRequest'
      @_hash['group_name'] = 'groupName'
      @_hash['promo_alert_trigger_request'] = 'promoAlertTriggerRequest'
      @_hash['session_trigger_request'] = 'sessionTriggerRequest'
      @_hash['sms_trigger_request'] = 'smsTriggerRequest'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['trigger_id'] = 'triggerId'
      @_hash['trigger_name'] = 'triggerName'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        active
        anomaly_trigger_request
        cycle_type
        data_trigger_request
        group_name
        promo_alert_trigger_request
        session_trigger_request
        sms_trigger_request
        trigger_category
        trigger_id
        trigger_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   active = SKIP,
                   anomaly_trigger_request = SKIP,
                   cycle_type = SKIP,
                   data_trigger_request = SKIP,
                   group_name = SKIP,
                   promo_alert_trigger_request = SKIP,
                   session_trigger_request = SKIP,
                   sms_trigger_request = SKIP,
                   trigger_category = SKIP,
                   trigger_id = SKIP,
                   trigger_name = SKIP)
      @account_name = account_name unless account_name == SKIP
      @active = active unless active == SKIP
      @anomaly_trigger_request = anomaly_trigger_request unless anomaly_trigger_request == SKIP
      @cycle_type = cycle_type unless cycle_type == SKIP
      @data_trigger_request = data_trigger_request unless data_trigger_request == SKIP
      @group_name = group_name unless group_name == SKIP
      unless promo_alert_trigger_request == SKIP
        @promo_alert_trigger_request =
          promo_alert_trigger_request
      end
      @session_trigger_request = session_trigger_request unless session_trigger_request == SKIP
      @sms_trigger_request = sms_trigger_request unless sms_trigger_request == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @trigger_id = trigger_id unless trigger_id == SKIP
      @trigger_name = trigger_name unless trigger_name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      active = hash.key?('active') ? hash['active'] : SKIP
      anomaly_trigger_request = AnomalyTriggerRequest.from_hash(hash['anomalyTriggerRequest']) if
        hash['anomalyTriggerRequest']
      cycle_type = hash.key?('cycleType') ? hash['cycleType'] : SKIP
      data_trigger_request = DataTriggerRequest.from_hash(hash['dataTriggerRequest']) if
        hash['dataTriggerRequest']
      group_name = hash.key?('groupName') ? hash['groupName'] : SKIP
      if hash['promoAlertTriggerRequest']
        promo_alert_trigger_request = PromoAlertTriggerRequest.from_hash(hash['promoAlertTriggerRequest'])
      end
      session_trigger_request = SessionTriggerRequest.from_hash(hash['sessionTriggerRequest']) if
        hash['sessionTriggerRequest']
      sms_trigger_request = SMSTriggerRequest.from_hash(hash['smsTriggerRequest']) if
        hash['smsTriggerRequest']
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      trigger_id = hash.key?('triggerId') ? hash['triggerId'] : SKIP
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP

      # Create object from extracted values.
      UpdateTriggerRequest.new(account_name,
                               active,
                               anomaly_trigger_request,
                               cycle_type,
                               data_trigger_request,
                               group_name,
                               promo_alert_trigger_request,
                               session_trigger_request,
                               sms_trigger_request,
                               trigger_category,
                               trigger_id,
                               trigger_name)
    end
  end
end
