# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Position data.
  class PositionData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Time location obtained.
    # @return [String]
    attr_accessor :time

    # UTC offset of time.
    # @return [String]
    attr_accessor :utcoffset

    # X coordinate of location.
    # @return [String]
    attr_accessor :x

    # Y coordinate of location.
    # @return [String]
    attr_accessor :y

    # Radius of the location in meters.
    # @return [String]
    attr_accessor :radius

    # Whether requested accurary is met or not.
    # @return [TrueClass | FalseClass]
    attr_accessor :qos

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['time'] = 'time'
      @_hash['utcoffset'] = 'utcoffset'
      @_hash['x'] = 'x'
      @_hash['y'] = 'y'
      @_hash['radius'] = 'radius'
      @_hash['qos'] = 'qos'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        time
        utcoffset
        x
        y
        radius
        qos
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(time = SKIP,
                   utcoffset = SKIP,
                   x = SKIP,
                   y = SKIP,
                   radius = SKIP,
                   qos = SKIP)
      @time = time unless time == SKIP
      @utcoffset = utcoffset unless utcoffset == SKIP
      @x = x unless x == SKIP
      @y = y unless y == SKIP
      @radius = radius unless radius == SKIP
      @qos = qos unless qos == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      time = hash.key?('time') ? hash['time'] : SKIP
      utcoffset = hash.key?('utcoffset') ? hash['utcoffset'] : SKIP
      x = hash.key?('x') ? hash['x'] : SKIP
      y = hash.key?('y') ? hash['y'] : SKIP
      radius = hash.key?('radius') ? hash['radius'] : SKIP
      qos = hash.key?('qos') ? hash['qos'] : SKIP

      # Create object from extracted values.
      PositionData.new(time,
                       utcoffset,
                       x,
                       y,
                       radius,
                       qos)
    end
  end
end
