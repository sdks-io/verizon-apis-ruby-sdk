# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # License assignment or removal confirmation.
  class V1LicensesAssignedRemovedResult < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account identifier in "##########-#####".
    # @return [String]
    attr_accessor :account_name

    # Total number of monthly licenses in an MRC subscription.
    # @return [Integer]
    attr_accessor :lic_count

    # Number of licenses assigned to devices after the request completed.
    # @return [Integer]
    attr_accessor :lic_used_count

    # A JSON object for each device that was in the request.
    # @return [Array[V1DeviceListItem]]
    attr_accessor :device_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['lic_count'] = 'licCount'
      @_hash['lic_used_count'] = 'licUsedCount'
      @_hash['device_list'] = 'deviceList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        lic_count
        lic_used_count
        device_list
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   lic_count = SKIP,
                   lic_used_count = SKIP,
                   device_list = SKIP)
      @account_name = account_name unless account_name == SKIP
      @lic_count = lic_count unless lic_count == SKIP
      @lic_used_count = lic_used_count unless lic_used_count == SKIP
      @device_list = device_list unless device_list == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      lic_count = hash.key?('licCount') ? hash['licCount'] : SKIP
      lic_used_count = hash.key?('licUsedCount') ? hash['licUsedCount'] : SKIP
      # Parameter is an array, so we need to iterate through it
      device_list = nil
      unless hash['deviceList'].nil?
        device_list = []
        hash['deviceList'].each do |structure|
          device_list << (V1DeviceListItem.from_hash(structure) if structure)
        end
      end

      device_list = SKIP unless hash.key?('deviceList')

      # Create object from extracted values.
      V1LicensesAssignedRemovedResult.new(account_name,
                                          lic_count,
                                          lic_used_count,
                                          device_list)
    end
  end
end
