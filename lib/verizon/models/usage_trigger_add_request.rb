# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # UsageTriggerAddRequest Model.
  class UsageTriggerAddRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Usage trigger name
    # @return [String]
    attr_accessor :trigger_name

    # Account name
    # @return [String]
    attr_accessor :account_name

    # Service name
    # @return [ServiceNameEnum]
    attr_accessor :service_name

    # The percent of subscribed usage required to activate the trigger, such as
    # 90 or 100.
    # @return [String]
    attr_accessor :threshold_value

    # Allow additional requests after thresholdValue is reached. (currently not
    # functional)
    # @return [TrueClass | FalseClass]
    attr_accessor :allow_excess

    # Send SMS (text) alerts when the thresholdValue is reached.
    # @return [TrueClass | FalseClass]
    attr_accessor :send_sms_notification

    # Comma-separated list of phone numbers to send SMS alerts to. Digits only;
    # no dashes or parentheses, etc.
    # @return [String]
    attr_accessor :sms_phone_numbers

    # Send email alerts when the thresholdValue is reached.
    # @return [TrueClass | FalseClass]
    attr_accessor :send_email_notification

    # Comma-separated list of email addresses to send alerts to.
    # @return [String]
    attr_accessor :email_addresses

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['trigger_name'] = 'triggerName'
      @_hash['account_name'] = 'accountName'
      @_hash['service_name'] = 'serviceName'
      @_hash['threshold_value'] = 'thresholdValue'
      @_hash['allow_excess'] = 'allowExcess'
      @_hash['send_sms_notification'] = 'sendSmsNotification'
      @_hash['sms_phone_numbers'] = 'smsPhoneNumbers'
      @_hash['send_email_notification'] = 'sendEmailNotification'
      @_hash['email_addresses'] = 'emailAddresses'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        trigger_name
        allow_excess
        send_sms_notification
        sms_phone_numbers
        send_email_notification
        email_addresses
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = nil,
                   service_name = ServiceNameEnum::LOCATION,
                   threshold_value = nil,
                   trigger_name = SKIP,
                   allow_excess = SKIP,
                   send_sms_notification = SKIP,
                   sms_phone_numbers = SKIP,
                   send_email_notification = SKIP,
                   email_addresses = SKIP)
      @trigger_name = trigger_name unless trigger_name == SKIP
      @account_name = account_name
      @service_name = service_name
      @threshold_value = threshold_value
      @allow_excess = allow_excess unless allow_excess == SKIP
      @send_sms_notification = send_sms_notification unless send_sms_notification == SKIP
      @sms_phone_numbers = sms_phone_numbers unless sms_phone_numbers == SKIP
      @send_email_notification = send_email_notification unless send_email_notification == SKIP
      @email_addresses = email_addresses unless email_addresses == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : nil
      service_name = hash['serviceName'] ||= ServiceNameEnum::LOCATION
      threshold_value =
        hash.key?('thresholdValue') ? hash['thresholdValue'] : nil
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP
      allow_excess = hash.key?('allowExcess') ? hash['allowExcess'] : SKIP
      send_sms_notification =
        hash.key?('sendSmsNotification') ? hash['sendSmsNotification'] : SKIP
      sms_phone_numbers =
        hash.key?('smsPhoneNumbers') ? hash['smsPhoneNumbers'] : SKIP
      send_email_notification =
        hash.key?('sendEmailNotification') ? hash['sendEmailNotification'] : SKIP
      email_addresses =
        hash.key?('emailAddresses') ? hash['emailAddresses'] : SKIP

      # Create object from extracted values.
      UsageTriggerAddRequest.new(account_name,
                                 service_name,
                                 threshold_value,
                                 trigger_name,
                                 allow_excess,
                                 send_sms_notification,
                                 sms_phone_numbers,
                                 send_email_notification,
                                 email_addresses)
    end
  end
end
