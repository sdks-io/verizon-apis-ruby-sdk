# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Response containing the connection history. It is a list of Network
  # Connection Events for a device.
  class ConnectionHistoryResult < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Device connection events, sorted by the occurredAt timestamp, oldest
    # first.
    # @return [Array[ConnectionEvent]]
    attr_accessor :connection_history

    # False for a status 200 response.True for a status 202 response, indicating
    # that there is more data to be retrieved. Send another request, adjusting
    # the earliest value in the request based on the occuredAt value for the
    # last device in the current response.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_more_data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['connection_history'] = 'connectionHistory'
      @_hash['has_more_data'] = 'hasMoreData'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        connection_history
        has_more_data
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(connection_history = SKIP,
                   has_more_data = SKIP)
      @connection_history = connection_history unless connection_history == SKIP
      @has_more_data = has_more_data unless has_more_data == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      connection_history = nil
      unless hash['connectionHistory'].nil?
        connection_history = []
        hash['connectionHistory'].each do |structure|
          connection_history << (ConnectionEvent.from_hash(structure) if structure)
        end
      end

      connection_history = SKIP unless hash.key?('connectionHistory')
      has_more_data = hash.key?('hasMoreData') ? hash['hasMoreData'] : SKIP

      # Create object from extracted values.
      ConnectionHistoryResult.new(connection_history,
                                  has_more_data)
    end
  end
end
