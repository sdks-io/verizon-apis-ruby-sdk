# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # RequestTrigger Model.
  class RequestTrigger < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organization_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_category

    # TODO: Write general description for this method
    # @return [Array[PromoAlert1]]
    attr_accessor :promo_alerts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['trigger_id'] = 'triggerId'
      @_hash['trigger_name'] = 'triggerName'
      @_hash['account_name'] = 'accountName'
      @_hash['organization_name'] = 'organizationName'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['promo_alerts'] = 'promoAlerts'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        trigger_id
        trigger_name
        account_name
        organization_name
        trigger_category
        promo_alerts
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(trigger_id = SKIP,
                   trigger_name = SKIP,
                   account_name = SKIP,
                   organization_name = SKIP,
                   trigger_category = SKIP,
                   promo_alerts = SKIP)
      @trigger_id = trigger_id unless trigger_id == SKIP
      @trigger_name = trigger_name unless trigger_name == SKIP
      @account_name = account_name unless account_name == SKIP
      @organization_name = organization_name unless organization_name == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @promo_alerts = promo_alerts unless promo_alerts == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      trigger_id = hash.key?('triggerId') ? hash['triggerId'] : SKIP
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      organization_name =
        hash.key?('organizationName') ? hash['organizationName'] : SKIP
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      # Parameter is an array, so we need to iterate through it
      promo_alerts = nil
      unless hash['promoAlerts'].nil?
        promo_alerts = []
        hash['promoAlerts'].each do |structure|
          promo_alerts << (PromoAlert1.from_hash(structure) if structure)
        end
      end

      promo_alerts = SKIP unless hash.key?('promoAlerts')

      # Create object from extracted values.
      RequestTrigger.new(trigger_id,
                         trigger_name,
                         account_name,
                         organization_name,
                         trigger_category,
                         promo_alerts)
    end
  end
end
