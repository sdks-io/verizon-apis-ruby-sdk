# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Trigger details.
  class TriggerType3 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Trigger ID.
    # @return [String]
    attr_accessor :trigger_id

    # Trigger name.
    # @return [String]
    attr_accessor :trigger_name

    # This is the value to use in the request body to detect anomalous
    # behaivior. The values in this table will only be relevant when this
    # parameter is set to this value.
    # @return [String]
    attr_accessor :trigger_category

    # Account name.
    # @return [String]
    attr_accessor :account_name

    # The details of the UsageAnomaly trigger.
    # @return [AnomalyTriggerRequest]
    attr_accessor :anomaly_trigger_request

    # The notification details of the trigger.
    # @return [Notification]
    attr_accessor :notification

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['trigger_id'] = 'triggerId'
      @_hash['trigger_name'] = 'triggerName'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['account_name'] = 'accountName'
      @_hash['anomaly_trigger_request'] = 'anomalyTriggerRequest'
      @_hash['notification'] = 'notification'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        trigger_id
        trigger_name
        trigger_category
        account_name
        anomaly_trigger_request
        notification
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(trigger_id = SKIP,
                   trigger_name = SKIP,
                   trigger_category = SKIP,
                   account_name = SKIP,
                   anomaly_trigger_request = SKIP,
                   notification = SKIP)
      @trigger_id = trigger_id unless trigger_id == SKIP
      @trigger_name = trigger_name unless trigger_name == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @account_name = account_name unless account_name == SKIP
      @anomaly_trigger_request = anomaly_trigger_request unless anomaly_trigger_request == SKIP
      @notification = notification unless notification == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      trigger_id = hash.key?('triggerId') ? hash['triggerId'] : SKIP
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      anomaly_trigger_request = AnomalyTriggerRequest.from_hash(hash['anomalyTriggerRequest']) if
        hash['anomalyTriggerRequest']
      notification = Notification.from_hash(hash['notification']) if hash['notification']

      # Create object from extracted values.
      TriggerType3.new(trigger_id,
                       trigger_name,
                       trigger_category,
                       account_name,
                       anomaly_trigger_request,
                       notification)
    end
  end
end
