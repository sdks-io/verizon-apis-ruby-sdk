# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Information about the resource requirements and service characteristics of
  # an edge application. Includes serviceProfileId. Used when retrieving a
  # service profile.
  class ResourcesServiceProfileWithId < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique identifier for a service profile.
    # @return [String]
    attr_accessor :service_profile_id

    # The category of application client.
    # @return [ClientTypeEnum]
    attr_accessor :client_type

    # Identity of the preferred Edge Computing Service Provider.
    # @return [String]
    attr_accessor :ecsp_filter

    # The expected operation schedule of the application client (e.g. time
    # windows).
    # @return [String]
    attr_accessor :client_schedule

    # The expected location(s) (e.g. route) of the hosting UE during the
    # Client's operation schedule.
    # @return [String]
    attr_accessor :client_service_area

    # Network resources of a service profile.
    # @return [NetworkResourcesType]
    attr_accessor :network_resources

    # Compute resources of a service profile.
    # @return [ComputeResourcesType]
    attr_accessor :compute_resources

    # Additional service support information for the MEC platform.
    # @return [MECPlatformsAdditionalSupportInfo]
    attr_accessor :properties

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['service_profile_id'] = 'serviceProfileId'
      @_hash['client_type'] = 'clientType'
      @_hash['ecsp_filter'] = 'ecspFilter'
      @_hash['client_schedule'] = 'clientSchedule'
      @_hash['client_service_area'] = 'clientServiceArea'
      @_hash['network_resources'] = 'networkResources'
      @_hash['compute_resources'] = 'computeResources'
      @_hash['properties'] = 'properties'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        service_profile_id
        ecsp_filter
        client_schedule
        client_service_area
        network_resources
        compute_resources
        properties
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(client_type = nil,
                   service_profile_id = SKIP,
                   ecsp_filter = SKIP,
                   client_schedule = SKIP,
                   client_service_area = SKIP,
                   network_resources = SKIP,
                   compute_resources = SKIP,
                   properties = SKIP)
      @service_profile_id = service_profile_id unless service_profile_id == SKIP
      @client_type = client_type
      @ecsp_filter = ecsp_filter unless ecsp_filter == SKIP
      @client_schedule = client_schedule unless client_schedule == SKIP
      @client_service_area = client_service_area unless client_service_area == SKIP
      @network_resources = network_resources unless network_resources == SKIP
      @compute_resources = compute_resources unless compute_resources == SKIP
      @properties = properties unless properties == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      client_type = hash.key?('clientType') ? hash['clientType'] : nil
      service_profile_id =
        hash.key?('serviceProfileId') ? hash['serviceProfileId'] : SKIP
      ecsp_filter = hash.key?('ecspFilter') ? hash['ecspFilter'] : SKIP
      client_schedule =
        hash.key?('clientSchedule') ? hash['clientSchedule'] : SKIP
      client_service_area =
        hash.key?('clientServiceArea') ? hash['clientServiceArea'] : SKIP
      network_resources = NetworkResourcesType.from_hash(hash['networkResources']) if
        hash['networkResources']
      compute_resources = ComputeResourcesType.from_hash(hash['computeResources']) if
        hash['computeResources']
      properties = MECPlatformsAdditionalSupportInfo.from_hash(hash['properties']) if
        hash['properties']

      # Create object from extracted values.
      ResourcesServiceProfileWithId.new(client_type,
                                        service_profile_id,
                                        ecsp_filter,
                                        client_schedule,
                                        client_service_area,
                                        network_resources,
                                        compute_resources,
                                        properties)
    end
  end
end
