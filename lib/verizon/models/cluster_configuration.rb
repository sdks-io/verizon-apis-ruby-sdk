# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # ClusterConfiguration Model.
  class ClusterConfiguration < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [EdgeServiceLaunchParams]
    attr_accessor :tags

    # TODO: Write general description for this method
    # @return [ClusterConfigEndpointAccessTypeEnum]
    attr_accessor :end_point_access_type

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :auto_create_network_infra

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :infra_i_pv4range

    # TODO: Write general description for this method
    # @return [NetworkNatModeEnum]
    attr_accessor :network_nat_mode

    # TODO: Write general description for this method
    # @return [Array[IdList]]
    attr_accessor :availability_zones

    # TODO: Write general description for this method
    # @return [Array[IdList]]
    attr_accessor :private_network_infra_ids

    # TODO: Write general description for this method
    # @return [Array[IdList]]
    attr_accessor :public_network_infra_ids

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['tags'] = 'tags'
      @_hash['end_point_access_type'] = 'endPointAccessType'
      @_hash['auto_create_network_infra'] = 'autoCreateNetworkInfra'
      @_hash['infra_i_pv4range'] = 'infraIPv4range'
      @_hash['network_nat_mode'] = 'networkNatMode'
      @_hash['availability_zones'] = 'availabilityZones'
      @_hash['private_network_infra_ids'] = 'privateNetworkInfraIds'
      @_hash['public_network_infra_ids'] = 'publicNetworkInfraIds'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        tags
        end_point_access_type
        auto_create_network_infra
        infra_i_pv4range
        network_nat_mode
        availability_zones
        private_network_infra_ids
        public_network_infra_ids
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(tags = SKIP,
                   end_point_access_type = ClusterConfigEndpointAccessTypeEnum::PRIVATEACCESS,
                   auto_create_network_infra = true,
                   infra_i_pv4range = '192.168.0.0/16',
                   network_nat_mode = NetworkNatModeEnum::SINGLE,
                   availability_zones = SKIP,
                   private_network_infra_ids = SKIP,
                   public_network_infra_ids = SKIP)
      @tags = tags unless tags == SKIP
      @end_point_access_type = end_point_access_type unless end_point_access_type == SKIP
      unless auto_create_network_infra == SKIP
        @auto_create_network_infra =
          auto_create_network_infra
      end
      @infra_i_pv4range = infra_i_pv4range unless infra_i_pv4range == SKIP
      @network_nat_mode = network_nat_mode unless network_nat_mode == SKIP
      @availability_zones = availability_zones unless availability_zones == SKIP
      unless private_network_infra_ids == SKIP
        @private_network_infra_ids =
          private_network_infra_ids
      end
      @public_network_infra_ids = public_network_infra_ids unless public_network_infra_ids == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      tags = EdgeServiceLaunchParams.from_hash(hash['tags']) if hash['tags']
      end_point_access_type =
        hash['endPointAccessType'] ||= ClusterConfigEndpointAccessTypeEnum::PRIVATEACCESS
      auto_create_network_infra = hash['autoCreateNetworkInfra'] ||= true
      infra_i_pv4range = hash['infraIPv4range'] ||= '192.168.0.0/16'
      network_nat_mode = hash['networkNatMode'] ||= NetworkNatModeEnum::SINGLE
      # Parameter is an array, so we need to iterate through it
      availability_zones = nil
      unless hash['availabilityZones'].nil?
        availability_zones = []
        hash['availabilityZones'].each do |structure|
          availability_zones << (IdList.from_hash(structure) if structure)
        end
      end

      availability_zones = SKIP unless hash.key?('availabilityZones')
      # Parameter is an array, so we need to iterate through it
      private_network_infra_ids = nil
      unless hash['privateNetworkInfraIds'].nil?
        private_network_infra_ids = []
        hash['privateNetworkInfraIds'].each do |structure|
          private_network_infra_ids << (IdList.from_hash(structure) if structure)
        end
      end

      private_network_infra_ids = SKIP unless hash.key?('privateNetworkInfraIds')
      # Parameter is an array, so we need to iterate through it
      public_network_infra_ids = nil
      unless hash['publicNetworkInfraIds'].nil?
        public_network_infra_ids = []
        hash['publicNetworkInfraIds'].each do |structure|
          public_network_infra_ids << (IdList.from_hash(structure) if structure)
        end
      end

      public_network_infra_ids = SKIP unless hash.key?('publicNetworkInfraIds')

      # Create object from extracted values.
      ClusterConfiguration.new(tags,
                               end_point_access_type,
                               auto_create_network_infra,
                               infra_i_pv4range,
                               network_nat_mode,
                               availability_zones,
                               private_network_infra_ids,
                               public_network_infra_ids)
    end
  end
end
