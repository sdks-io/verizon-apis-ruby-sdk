# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Position error.
  class PositionError < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Time location obtained.
    # @return [String]
    attr_accessor :time

    # UTC offset of time.
    # @return [String]
    attr_accessor :utcoffset

    # Error type returned from location server.
    # @return [String]
    attr_accessor :type

    # Additional information about the error.
    # @return [String]
    attr_accessor :info

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['time'] = 'time'
      @_hash['utcoffset'] = 'utcoffset'
      @_hash['type'] = 'type'
      @_hash['info'] = 'info'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        time
        utcoffset
        type
        info
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(time = SKIP,
                   utcoffset = SKIP,
                   type = SKIP,
                   info = SKIP)
      @time = time unless time == SKIP
      @utcoffset = utcoffset unless utcoffset == SKIP
      @type = type unless type == SKIP
      @info = info unless info == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      time = hash.key?('time') ? hash['time'] : SKIP
      utcoffset = hash.key?('utcoffset') ? hash['utcoffset'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      info = hash.key?('info') ? hash['info'] : SKIP

      # Create object from extracted values.
      PositionError.new(time,
                        utcoffset,
                        type,
                        info)
    end
  end
end
