# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Maximum of 2,000 objects are allowed in the array.
  class AccountLabels < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[DeviceList]]
    attr_accessor :devices

    # TODO: Write general description for this method
    # @return [Array[DeviceLabels]]
    attr_accessor :label

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['devices'] = 'devices'
      @_hash['label'] = 'label'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        devices
        label
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(devices = SKIP,
                   label = SKIP)
      @devices = devices unless devices == SKIP
      @label = label unless label == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      devices = nil
      unless hash['devices'].nil?
        devices = []
        hash['devices'].each do |structure|
          devices << (DeviceList.from_hash(structure) if structure)
        end
      end

      devices = SKIP unless hash.key?('devices')
      # Parameter is an array, so we need to iterate through it
      label = nil
      unless hash['label'].nil?
        label = []
        hash['label'].each do |structure|
          label << (DeviceLabels.from_hash(structure) if structure)
        end
      end

      label = SKIP unless hash.key?('label')

      # Create object from extracted values.
      AccountLabels.new(devices,
                        label)
    end
  end
end
