# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DeactivateDeviceProfileRequest Model.
  class DeactivateDeviceProfileRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :reason_code

    # TODO: Write general description for this method
    # @return [Array[DeactivateDeviceList]]
    attr_accessor :devices

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :carrier_name

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :etf_waiver

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :check_fallback_profile

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['reason_code'] = 'reasonCode'
      @_hash['devices'] = 'devices'
      @_hash['carrier_name'] = 'carrierName'
      @_hash['etf_waiver'] = 'etfWaiver'
      @_hash['check_fallback_profile'] = 'checkFallbackProfile'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        devices
        carrier_name
        etf_waiver
        check_fallback_profile
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = nil,
                   reason_code = nil,
                   devices = SKIP,
                   carrier_name = SKIP,
                   etf_waiver = true,
                   check_fallback_profile = false)
      @account_name = account_name
      @reason_code = reason_code
      @devices = devices unless devices == SKIP
      @carrier_name = carrier_name unless carrier_name == SKIP
      @etf_waiver = etf_waiver unless etf_waiver == SKIP
      @check_fallback_profile = check_fallback_profile unless check_fallback_profile == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : nil
      reason_code = hash.key?('reasonCode') ? hash['reasonCode'] : nil
      # Parameter is an array, so we need to iterate through it
      devices = nil
      unless hash['devices'].nil?
        devices = []
        hash['devices'].each do |structure|
          devices << (DeactivateDeviceList.from_hash(structure) if structure)
        end
      end

      devices = SKIP unless hash.key?('devices')
      carrier_name = hash.key?('carrierName') ? hash['carrierName'] : SKIP
      etf_waiver = hash['etfWaiver'] ||= true
      check_fallback_profile = hash['checkFallbackProfile'] ||= false

      # Create object from extracted values.
      DeactivateDeviceProfileRequest.new(account_name,
                                         reason_code,
                                         devices,
                                         carrier_name,
                                         etf_waiver,
                                         check_fallback_profile)
    end
  end
end
