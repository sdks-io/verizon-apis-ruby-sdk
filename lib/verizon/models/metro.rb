# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Metro Model.
  class Metro < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :modified_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :latitude

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :longitude

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :country

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :cc

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :st

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :partner_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'ID'
      @_hash['name'] = 'name'
      @_hash['created_at'] = 'created_at'
      @_hash['modified_at'] = 'modified_at'
      @_hash['latitude'] = 'latitude'
      @_hash['longitude'] = 'longitude'
      @_hash['city'] = 'city'
      @_hash['state'] = 'state'
      @_hash['country'] = 'country'
      @_hash['cc'] = 'cc'
      @_hash['st'] = 'st'
      @_hash['partner_id'] = 'partner_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        created_at
        modified_at
        latitude
        longitude
        city
        state
        country
        cc
        st
        partner_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP,
                   name = SKIP,
                   created_at = SKIP,
                   modified_at = SKIP,
                   latitude = SKIP,
                   longitude = SKIP,
                   city = SKIP,
                   state = SKIP,
                   country = SKIP,
                   cc = SKIP,
                   st = SKIP,
                   partner_id = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @created_at = created_at unless created_at == SKIP
      @modified_at = modified_at unless modified_at == SKIP
      @latitude = latitude unless latitude == SKIP
      @longitude = longitude unless longitude == SKIP
      @city = city unless city == SKIP
      @state = state unless state == SKIP
      @country = country unless country == SKIP
      @cc = cc unless cc == SKIP
      @st = st unless st == SKIP
      @partner_id = partner_id unless partner_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('ID') ? hash['ID'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      modified_at = hash.key?('modified_at') ? hash['modified_at'] : SKIP
      latitude = hash.key?('latitude') ? hash['latitude'] : SKIP
      longitude = hash.key?('longitude') ? hash['longitude'] : SKIP
      city = hash.key?('city') ? hash['city'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      country = hash.key?('country') ? hash['country'] : SKIP
      cc = hash.key?('cc') ? hash['cc'] : SKIP
      st = hash.key?('st') ? hash['st'] : SKIP
      partner_id = hash.key?('partner_id') ? hash['partner_id'] : SKIP

      # Create object from extracted values.
      Metro.new(id,
                name,
                created_at,
                modified_at,
                latitude,
                longitude,
                city,
                state,
                country,
                cc,
                st,
                partner_id)
    end
  end
end
