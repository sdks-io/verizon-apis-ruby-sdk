# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # This service is dependent on other service.
  class DependentService < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Name of the service needs to be deployed.
    # @return [String]
    attr_accessor :name

    # Version of the service being used.
    # @return [String]
    attr_accessor :version

    # Can have any value as - DRAFT_INPROGRESS, DRAFT_COMPLETE,
    # DESIGN_INPROGRESS, DESIGN_FAILED, DESIGN_COMPLETED, VALIDATION_INPROGRESS,
    #  VALIDATION_FAILED, VALIDATION_COMPLETED, TESTING_INPROGRESS,
    # TESTING_FAILED, TESTING_COMPLETED, READY_TO_USE_INPROGRESS,
    # READY_TO_USE_FAILED, READY_TO_USE_COMPLETED,
    # READY_TO_PRIVATE_USE_INPROGRESS, READY_TO_PRIVATE_USE_FAILED,
    # READY_TO_PRIVATE_USE_COMPLETED,  PUBLISH_INPROGRESS,  PUBLISH_FAILED,
    # PUBLISH_COMPLETED,  CERTIFY_INPROGRESS,  CERTIFY_FAILED,
    # CERTIFY_COMPLETED, DEPRECATE_INPROGRESS,  DEPRECATE_FAILED,
    # DEPRECATE_COMPLETED, MARKDELETE_INPROGRESS, MARKDELETE_FAILED,
    # MARKDELETE_COMPLETED.
    # @return [ServiceStatusEnum]
    attr_accessor :status

    # List of dependent services type.
    # @return [DependentServicesTypeEnum]
    attr_accessor :type

    # User who created the service. Part of response only.
    # @return [String]
    attr_accessor :created_by

    # User who last modified the service. Part of response only.
    # @return [String]
    attr_accessor :last_modified_by

    # Instances of a service.
    # @return [Integer]
    attr_accessor :instances

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['version'] = 'version'
      @_hash['status'] = 'status'
      @_hash['type'] = 'type'
      @_hash['created_by'] = 'createdBy'
      @_hash['last_modified_by'] = 'lastModifiedBy'
      @_hash['instances'] = 'Instances'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        name
        version
        status
        type
        created_by
        last_modified_by
        instances
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        type
      ]
    end

    def initialize(name = SKIP,
                   version = SKIP,
                   status = SKIP,
                   type = SKIP,
                   created_by = SKIP,
                   last_modified_by = SKIP,
                   instances = SKIP)
      @name = name unless name == SKIP
      @version = version unless version == SKIP
      @status = status unless status == SKIP
      @type = type unless type == SKIP
      @created_by = created_by unless created_by == SKIP
      @last_modified_by = last_modified_by unless last_modified_by == SKIP
      @instances = instances unless instances == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      created_by = hash.key?('createdBy') ? hash['createdBy'] : SKIP
      last_modified_by =
        hash.key?('lastModifiedBy') ? hash['lastModifiedBy'] : SKIP
      instances = hash.key?('Instances') ? hash['Instances'] : SKIP

      # Create object from extracted values.
      DependentService.new(name,
                           version,
                           status,
                           type,
                           created_by,
                           last_modified_by,
                           instances)
    end
  end
end
