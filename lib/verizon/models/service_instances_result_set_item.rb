# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # ServiceInstancesResultSetItem Model.
  class ServiceInstancesResultSetItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # URL to check the status of the add service.
    # @return [String]
    attr_accessor :status_url

    # A unique Id assigned to the request by system calling API.
    # @return [String]
    attr_accessor :request_id

    # A unique Id assigned to the request by system calling API.
    # @return [String]
    attr_accessor :correlation_id

    # Status of the added service.
    # @return [String]
    attr_accessor :status

    # State of the service instance.
    # @return [String]
    attr_accessor :state

    # State of the service instance.
    # @return [ServiceInstance]
    attr_accessor :service

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['status_url'] = 'statusUrl'
      @_hash['request_id'] = 'requestId'
      @_hash['correlation_id'] = 'correlationId'
      @_hash['status'] = 'status'
      @_hash['state'] = 'state'
      @_hash['service'] = 'service'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        status_url
        request_id
        correlation_id
        status
        state
        service
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(status_url = SKIP,
                   request_id = SKIP,
                   correlation_id = SKIP,
                   status = SKIP,
                   state = SKIP,
                   service = SKIP)
      @status_url = status_url unless status_url == SKIP
      @request_id = request_id unless request_id == SKIP
      @correlation_id = correlation_id unless correlation_id == SKIP
      @status = status unless status == SKIP
      @state = state unless state == SKIP
      @service = service unless service == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      status_url = hash.key?('statusUrl') ? hash['statusUrl'] : SKIP
      request_id = hash.key?('requestId') ? hash['requestId'] : SKIP
      correlation_id = hash.key?('correlationId') ? hash['correlationId'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      service = ServiceInstance.from_hash(hash['service']) if hash['service']

      # Create object from extracted values.
      ServiceInstancesResultSetItem.new(status_url,
                                        request_id,
                                        correlation_id,
                                        status,
                                        state,
                                        service)
    end
  end
end
