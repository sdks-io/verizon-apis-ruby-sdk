# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The request body must include the UUID of the subscription that you want to
  # update plus any properties that you want to change.
  class CreateIoTApplicationRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A user defined name for the application being deployed in Azure IoT
    # Central.
    # @return [String]
    attr_accessor :app_name

    # The ThingSpace ID of the authenticating billing account
    # @return [String]
    attr_accessor :billing_account_id

    # The Azure ClientID of the associated Azure target account
    # @return [String]
    attr_accessor :client_id

    # The Azure Client Secret of the associated Azure target account
    # @return [String]
    attr_accessor :client_secret

    # The “email IDs” to be added to/sent to with this API.
    # @return [String]
    attr_accessor :email_i_ds

    # The Azure Resource group of the associated Azure target account
    # @return [String]
    attr_accessor :resourcegroup

    # This is the reference Azure IoT Central application developed by Verizon.
    # @return [String]
    attr_accessor :sample_io_tc_app

    # The Azure Subscription ID of the associated Azure target account
    # @return [String]
    attr_accessor :subscription_id

    # The Azure Tenant ID of the associated Azure target account
    # @return [String]
    attr_accessor :tenant_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['app_name'] = 'appName'
      @_hash['billing_account_id'] = 'billingAccountID'
      @_hash['client_id'] = 'clientID'
      @_hash['client_secret'] = 'clientSecret'
      @_hash['email_i_ds'] = 'emailIDs'
      @_hash['resourcegroup'] = 'resourcegroup'
      @_hash['sample_io_tc_app'] = 'sampleIOTcApp'
      @_hash['subscription_id'] = 'subscriptionID'
      @_hash['tenant_id'] = 'tenantID'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        app_name
        billing_account_id
        client_id
        client_secret
        email_i_ds
        resourcegroup
        sample_io_tc_app
        subscription_id
        tenant_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(app_name = SKIP,
                   billing_account_id = SKIP,
                   client_id = SKIP,
                   client_secret = SKIP,
                   email_i_ds = SKIP,
                   resourcegroup = SKIP,
                   sample_io_tc_app = SKIP,
                   subscription_id = SKIP,
                   tenant_id = SKIP)
      @app_name = app_name unless app_name == SKIP
      @billing_account_id = billing_account_id unless billing_account_id == SKIP
      @client_id = client_id unless client_id == SKIP
      @client_secret = client_secret unless client_secret == SKIP
      @email_i_ds = email_i_ds unless email_i_ds == SKIP
      @resourcegroup = resourcegroup unless resourcegroup == SKIP
      @sample_io_tc_app = sample_io_tc_app unless sample_io_tc_app == SKIP
      @subscription_id = subscription_id unless subscription_id == SKIP
      @tenant_id = tenant_id unless tenant_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      app_name = hash.key?('appName') ? hash['appName'] : SKIP
      billing_account_id =
        hash.key?('billingAccountID') ? hash['billingAccountID'] : SKIP
      client_id = hash.key?('clientID') ? hash['clientID'] : SKIP
      client_secret = hash.key?('clientSecret') ? hash['clientSecret'] : SKIP
      email_i_ds = hash.key?('emailIDs') ? hash['emailIDs'] : SKIP
      resourcegroup = hash.key?('resourcegroup') ? hash['resourcegroup'] : SKIP
      sample_io_tc_app =
        hash.key?('sampleIOTcApp') ? hash['sampleIOTcApp'] : SKIP
      subscription_id =
        hash.key?('subscriptionID') ? hash['subscriptionID'] : SKIP
      tenant_id = hash.key?('tenantID') ? hash['tenantID'] : SKIP

      # Create object from extracted values.
      CreateIoTApplicationRequest.new(app_name,
                                      billing_account_id,
                                      client_id,
                                      client_secret,
                                      email_i_ds,
                                      resourcegroup,
                                      sample_io_tc_app,
                                      subscription_id,
                                      tenant_id)
    end
  end
end
