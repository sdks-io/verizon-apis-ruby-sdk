# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The engagements associated with the account.
  class Engagement < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The engagement ID.
    # @return [String]
    attr_accessor :engagement_id

    # The charging group name.
    # @return [String]
    attr_accessor :charging_group

    # The services associated with the account.
    # @return [Array[AccountService]]
    attr_accessor :services

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['engagement_id'] = 'engagementId'
      @_hash['charging_group'] = 'chargingGroup'
      @_hash['services'] = 'services'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        engagement_id
        charging_group
        services
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(engagement_id = SKIP,
                   charging_group = SKIP,
                   services = SKIP)
      @engagement_id = engagement_id unless engagement_id == SKIP
      @charging_group = charging_group unless charging_group == SKIP
      @services = services unless services == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      engagement_id = hash.key?('engagementId') ? hash['engagementId'] : SKIP
      charging_group = hash.key?('chargingGroup') ? hash['chargingGroup'] : SKIP
      # Parameter is an array, so we need to iterate through it
      services = nil
      unless hash['services'].nil?
        services = []
        hash['services'].each do |structure|
          services << (AccountService.from_hash(structure) if structure)
        end
      end

      services = SKIP unless hash.key?('services')

      # Create object from extracted values.
      Engagement.new(engagement_id,
                     charging_group,
                     services)
    end
  end
end
