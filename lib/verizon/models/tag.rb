# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # Any name for the tag.
  class Tag < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Id of the user creating the repository.
    # @return [String]
    attr_accessor :id

    # Key properties/metadata attribute.
    # @return [String]
    attr_accessor :key

    # Description for the repository being created.
    # @return [String]
    attr_accessor :description

    # Properties/metadata value attribute.
    # @return [String]
    attr_accessor :value

    # Date when the repository was created.
    # @return [DateTime]
    attr_accessor :created_date

    # Date when the repository was updated.
    # @return [DateTime]
    attr_accessor :last_modified_date

    # User information by whom the repository was created.
    # @return [String]
    attr_accessor :created_by

    # User information by whom the repository was updated.
    # @return [String]
    attr_accessor :updated_by

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['key'] = 'key'
      @_hash['description'] = 'description'
      @_hash['value'] = 'value'
      @_hash['created_date'] = 'createdDate'
      @_hash['last_modified_date'] = 'lastModifiedDate'
      @_hash['created_by'] = 'createdBy'
      @_hash['updated_by'] = 'updatedBy'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        description
        value
        created_date
        last_modified_date
        created_by
        updated_by
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(key = nil,
                   id = SKIP,
                   description = SKIP,
                   value = SKIP,
                   created_date = SKIP,
                   last_modified_date = SKIP,
                   created_by = SKIP,
                   updated_by = SKIP)
      @id = id unless id == SKIP
      @key = key
      @description = description unless description == SKIP
      @value = value unless value == SKIP
      @created_date = created_date unless created_date == SKIP
      @last_modified_date = last_modified_date unless last_modified_date == SKIP
      @created_by = created_by unless created_by == SKIP
      @updated_by = updated_by unless updated_by == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      key = hash.key?('key') ? hash['key'] : nil
      id = hash.key?('id') ? hash['id'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      value = hash.key?('value') ? hash['value'] : SKIP
      created_date = if hash.key?('createdDate')
                       (DateTimeHelper.from_rfc3339(hash['createdDate']) if hash['createdDate'])
                     else
                       SKIP
                     end
      last_modified_date = if hash.key?('lastModifiedDate')
                             (DateTimeHelper.from_rfc3339(hash['lastModifiedDate']) if hash['lastModifiedDate'])
                           else
                             SKIP
                           end
      created_by = hash.key?('createdBy') ? hash['createdBy'] : SKIP
      updated_by = hash.key?('updatedBy') ? hash['updatedBy'] : SKIP

      # Create object from extracted values.
      Tag.new(key,
              id,
              description,
              value,
              created_date,
              last_modified_date,
              created_by,
              updated_by)
    end

    def to_created_date
      DateTimeHelper.to_rfc3339(created_date)
    end

    def to_last_modified_date
      DateTimeHelper.to_rfc3339(last_modified_date)
    end
  end
end
