# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Bill usage report.
  class BillableUsageReport < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account identifier.
    # @return [String]
    attr_accessor :account_name

    # The usage is for a single or multiple accounts.
    # @return [TrueClass | FalseClass]
    attr_accessor :usage_for_all_accounts

    # SKU Name of the service subscription.
    # @return [String]
    attr_accessor :sku_name

    # The number of location requests included with the subscription type.
    # @return [String]
    attr_accessor :transactions_allowed

    # The total number of billable device location requests during the reporting
    # period from all included accounts.
    # @return [String]
    attr_accessor :total_transaction_count

    # The total number of billable device location requests during the reporting
    # period from all included accounts.
    # @return [ServiceUsage]
    attr_accessor :primary_account

    # Zero or more managed accounts.
    # @return [Array[ServiceUsage]]
    attr_accessor :managed_accounts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['usage_for_all_accounts'] = 'usageForAllAccounts'
      @_hash['sku_name'] = 'skuName'
      @_hash['transactions_allowed'] = 'transactionsAllowed'
      @_hash['total_transaction_count'] = 'totalTransactionCount'
      @_hash['primary_account'] = 'PrimaryAccount'
      @_hash['managed_accounts'] = 'ManagedAccounts'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        usage_for_all_accounts
        sku_name
        transactions_allowed
        total_transaction_count
        primary_account
        managed_accounts
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   usage_for_all_accounts = SKIP,
                   sku_name = SKIP,
                   transactions_allowed = SKIP,
                   total_transaction_count = SKIP,
                   primary_account = SKIP,
                   managed_accounts = SKIP)
      @account_name = account_name unless account_name == SKIP
      @usage_for_all_accounts = usage_for_all_accounts unless usage_for_all_accounts == SKIP
      @sku_name = sku_name unless sku_name == SKIP
      @transactions_allowed = transactions_allowed unless transactions_allowed == SKIP
      @total_transaction_count = total_transaction_count unless total_transaction_count == SKIP
      @primary_account = primary_account unless primary_account == SKIP
      @managed_accounts = managed_accounts unless managed_accounts == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      usage_for_all_accounts =
        hash.key?('usageForAllAccounts') ? hash['usageForAllAccounts'] : SKIP
      sku_name = hash.key?('skuName') ? hash['skuName'] : SKIP
      transactions_allowed =
        hash.key?('transactionsAllowed') ? hash['transactionsAllowed'] : SKIP
      total_transaction_count =
        hash.key?('totalTransactionCount') ? hash['totalTransactionCount'] : SKIP
      primary_account = ServiceUsage.from_hash(hash['PrimaryAccount']) if hash['PrimaryAccount']
      # Parameter is an array, so we need to iterate through it
      managed_accounts = nil
      unless hash['ManagedAccounts'].nil?
        managed_accounts = []
        hash['ManagedAccounts'].each do |structure|
          managed_accounts << (ServiceUsage.from_hash(structure) if structure)
        end
      end

      managed_accounts = SKIP unless hash.key?('ManagedAccounts')

      # Create object from extracted values.
      BillableUsageReport.new(account_name,
                              usage_for_all_accounts,
                              sku_name,
                              transactions_allowed,
                              total_transaction_count,
                              primary_account,
                              managed_accounts)
    end
  end
end
