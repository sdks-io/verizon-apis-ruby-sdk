# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # ESIMStatusResponse Model.
  class ESIMStatusResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :request_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [Array[ESIMsubrequest]]
    attr_accessor :subrequests

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'requestId'
      @_hash['status'] = 'status'
      @_hash['subrequests'] = 'subrequests'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        request_id
        status
        subrequests
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(request_id = SKIP,
                   status = SKIP,
                   subrequests = SKIP)
      @request_id = request_id unless request_id == SKIP
      @status = status unless status == SKIP
      @subrequests = subrequests unless subrequests == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('requestId') ? hash['requestId'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      # Parameter is an array, so we need to iterate through it
      subrequests = nil
      unless hash['subrequests'].nil?
        subrequests = []
        hash['subrequests'].each do |structure|
          subrequests << (ESIMsubrequest.from_hash(structure) if structure)
        end
      end

      subrequests = SKIP unless hash.key?('subrequests')

      # Create object from extracted values.
      ESIMStatusResponse.new(request_id,
                             status,
                             subrequests)
    end
  end
end
