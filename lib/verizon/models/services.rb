# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Response to get all services.
  class Services < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Will display the total number of records fetched.
    # @return [Integer]
    attr_accessor :total_records

    # Response to fetch all services.
    # @return [Array[Service]]
    attr_accessor :service_res_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['total_records'] = 'totalRecords'
      @_hash['service_res_list'] = 'serviceResList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        total_records
        service_res_list
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(total_records = SKIP,
                   service_res_list = SKIP)
      @total_records = total_records unless total_records == SKIP
      @service_res_list = service_res_list unless service_res_list == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      total_records = hash.key?('totalRecords') ? hash['totalRecords'] : SKIP
      # Parameter is an array, so we need to iterate through it
      service_res_list = nil
      unless hash['serviceResList'].nil?
        service_res_list = []
        hash['serviceResList'].each do |structure|
          service_res_list << (Service.from_hash(structure) if structure)
        end
      end

      service_res_list = SKIP unless hash.key?('serviceResList')

      # Create object from extracted values.
      Services.new(total_records,
                   service_res_list)
    end
  end
end
