# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Returns information for all leads associated with an account.
  class AccountLeadsResult < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # False if no more leads.True if there is more data to be retrieved.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_more_data

    # The leads associated with an account.
    # @return [Array[AccountLead]]
    attr_accessor :leads

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['has_more_data'] = 'hasMoreData'
      @_hash['leads'] = 'leads'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        has_more_data
        leads
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(has_more_data = SKIP,
                   leads = SKIP)
      @has_more_data = has_more_data unless has_more_data == SKIP
      @leads = leads unless leads == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      has_more_data = hash.key?('hasMoreData') ? hash['hasMoreData'] : SKIP
      # Parameter is an array, so we need to iterate through it
      leads = nil
      unless hash['leads'].nil?
        leads = []
        hash['leads'].each do |structure|
          leads << (AccountLead.from_hash(structure) if structure)
        end
      end

      leads = SKIP unless hash.key?('leads')

      # Create object from extracted values.
      AccountLeadsResult.new(has_more_data,
                             leads)
    end
  end
end
