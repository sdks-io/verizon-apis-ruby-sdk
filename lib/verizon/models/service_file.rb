# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # Response to get file of a service.
  class ServiceFile < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # System generated unique UUID.
    # @return [String]
    attr_accessor :id

    # Service name to which the file is going to be associated.
    # @return [String]
    attr_accessor :service_name

    # Version of the service being used.
    # @return [String]
    attr_accessor :service_version

    # File which is to be uploaded should be provided in formData.
    # @return [String]
    attr_accessor :file

    # Name of the workload being used in the service.
    # @return [String]
    attr_accessor :category_name

    # Version of the workload being used in the service.
    # @return [String]
    attr_accessor :category_version

    # Type of the workload being used in the service eg: use WORKLOAD_TGZ to
    # upload the workload file in tgz format.
    # @return [String]
    attr_accessor :category_type

    # Gives the success and failure response for the validation.
    # @return [String]
    attr_accessor :validation_status

    # System captured creation date and time when tag is created.
    # @return [DateTime]
    attr_accessor :created_date

    # System captured date and time when the tag was last modified.
    # @return [DateTime]
    attr_accessor :last_modified_date

    # User information who created the tag.
    # @return [String]
    attr_accessor :created_by

    # Last user information who made changes to tag.
    # @return [String]
    attr_accessor :updated_by

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['service_name'] = 'serviceName'
      @_hash['service_version'] = 'serviceVersion'
      @_hash['file'] = 'file'
      @_hash['category_name'] = 'categoryName'
      @_hash['category_version'] = 'categoryVersion'
      @_hash['category_type'] = 'categoryType'
      @_hash['validation_status'] = 'validationStatus'
      @_hash['created_date'] = 'createdDate'
      @_hash['last_modified_date'] = 'lastModifiedDate'
      @_hash['created_by'] = 'createdBy'
      @_hash['updated_by'] = 'updatedBy'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        service_name
        service_version
        file
        category_name
        category_version
        category_type
        validation_status
        created_date
        last_modified_date
        created_by
        updated_by
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP,
                   service_name = SKIP,
                   service_version = SKIP,
                   file = SKIP,
                   category_name = SKIP,
                   category_version = SKIP,
                   category_type = SKIP,
                   validation_status = SKIP,
                   created_date = SKIP,
                   last_modified_date = SKIP,
                   created_by = SKIP,
                   updated_by = SKIP)
      @id = id unless id == SKIP
      @service_name = service_name unless service_name == SKIP
      @service_version = service_version unless service_version == SKIP
      @file = file unless file == SKIP
      @category_name = category_name unless category_name == SKIP
      @category_version = category_version unless category_version == SKIP
      @category_type = category_type unless category_type == SKIP
      @validation_status = validation_status unless validation_status == SKIP
      @created_date = created_date unless created_date == SKIP
      @last_modified_date = last_modified_date unless last_modified_date == SKIP
      @created_by = created_by unless created_by == SKIP
      @updated_by = updated_by unless updated_by == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      service_name = hash.key?('serviceName') ? hash['serviceName'] : SKIP
      service_version =
        hash.key?('serviceVersion') ? hash['serviceVersion'] : SKIP
      file = hash.key?('file') ? hash['file'] : SKIP
      category_name = hash.key?('categoryName') ? hash['categoryName'] : SKIP
      category_version =
        hash.key?('categoryVersion') ? hash['categoryVersion'] : SKIP
      category_type = hash.key?('categoryType') ? hash['categoryType'] : SKIP
      validation_status =
        hash.key?('validationStatus') ? hash['validationStatus'] : SKIP
      created_date = if hash.key?('createdDate')
                       (DateTimeHelper.from_rfc3339(hash['createdDate']) if hash['createdDate'])
                     else
                       SKIP
                     end
      last_modified_date = if hash.key?('lastModifiedDate')
                             (DateTimeHelper.from_rfc3339(hash['lastModifiedDate']) if hash['lastModifiedDate'])
                           else
                             SKIP
                           end
      created_by = hash.key?('createdBy') ? hash['createdBy'] : SKIP
      updated_by = hash.key?('updatedBy') ? hash['updatedBy'] : SKIP

      # Create object from extracted values.
      ServiceFile.new(id,
                      service_name,
                      service_version,
                      file,
                      category_name,
                      category_version,
                      category_type,
                      validation_status,
                      created_date,
                      last_modified_date,
                      created_by,
                      updated_by)
    end

    def to_created_date
      DateTimeHelper.to_rfc3339(created_date)
    end

    def to_last_modified_date
      DateTimeHelper.to_rfc3339(last_modified_date)
    end
  end
end
