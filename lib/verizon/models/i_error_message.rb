# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Error message.
  class IErrorMessage < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Error Code.
    # @return [ErrorResponseCodeEnum]
    attr_accessor :error_code

    # Details and additional information about the error code.
    # @return [String]
    attr_accessor :error_message

    # HTML error code and description.
    # @return [HttpStatusCodeEnum]
    attr_accessor :http_status_code

    # More detail and information about the HTML error code.
    # @return [String]
    attr_accessor :detail_error_message

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['error_code'] = 'errorCode'
      @_hash['error_message'] = 'errorMessage'
      @_hash['http_status_code'] = 'httpStatusCode'
      @_hash['detail_error_message'] = 'detailErrorMessage'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        error_code
        error_message
        http_status_code
        detail_error_message
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(error_code = SKIP,
                   error_message = SKIP,
                   http_status_code = SKIP,
                   detail_error_message = SKIP)
      @error_code = error_code unless error_code == SKIP
      @error_message = error_message unless error_message == SKIP
      @http_status_code = http_status_code unless http_status_code == SKIP
      @detail_error_message = detail_error_message unless detail_error_message == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      error_code = hash.key?('errorCode') ? hash['errorCode'] : SKIP
      error_message = hash.key?('errorMessage') ? hash['errorMessage'] : SKIP
      http_status_code =
        hash.key?('httpStatusCode') ? hash['httpStatusCode'] : SKIP
      detail_error_message =
        hash.key?('detailErrorMessage') ? hash['detailErrorMessage'] : SKIP

      # Create object from extracted values.
      IErrorMessage.new(error_code,
                        error_message,
                        http_status_code,
                        detail_error_message)
    end
  end
end
