# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # List of cancellation candidate devices.
  class V1ListOfLicensesToRemove < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The total number of devices on the list.
    # @return [Integer]
    attr_accessor :count

    # True if there are more devices to retrieve.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_more_data

    # The date and time that the list was last updated.
    # @return [DateTime]
    attr_accessor :update_time

    # The IMEIs of the devices.
    # @return [Array[String]]
    attr_accessor :device_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['count'] = 'count'
      @_hash['has_more_data'] = 'hasMoreData'
      @_hash['update_time'] = 'updateTime'
      @_hash['device_list'] = 'deviceList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        count
        has_more_data
        update_time
        device_list
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(count = SKIP,
                   has_more_data = SKIP,
                   update_time = SKIP,
                   device_list = SKIP)
      @count = count unless count == SKIP
      @has_more_data = has_more_data unless has_more_data == SKIP
      @update_time = update_time unless update_time == SKIP
      @device_list = device_list unless device_list == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      count = hash.key?('count') ? hash['count'] : SKIP
      has_more_data = hash.key?('hasMoreData') ? hash['hasMoreData'] : SKIP
      update_time = if hash.key?('updateTime')
                      (DateTimeHelper.from_rfc3339(hash['updateTime']) if hash['updateTime'])
                    else
                      SKIP
                    end
      device_list = hash.key?('deviceList') ? hash['deviceList'] : SKIP

      # Create object from extracted values.
      V1ListOfLicensesToRemove.new(count,
                                   has_more_data,
                                   update_time,
                                   device_list)
    end

    def to_update_time
      DateTimeHelper.to_rfc3339(update_time)
    end
  end
end
