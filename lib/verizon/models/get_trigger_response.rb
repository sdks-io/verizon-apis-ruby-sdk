# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # GetTriggerResponse Model.
  class GetTriggerResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :comparator

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :group_name

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :modified_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :notification_group_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organization_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :sms_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :threshold

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :threshold_unit

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_category

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_cycle

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :trigger_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['comparator'] = 'comparator'
      @_hash['created_at'] = 'createdAt'
      @_hash['group_name'] = 'groupName'
      @_hash['modified_at'] = 'modifiedAt'
      @_hash['notification_group_name'] = 'notificationGroupName'
      @_hash['organization_name'] = 'organizationName'
      @_hash['sms_type'] = 'smsType'
      @_hash['threshold'] = 'threshold'
      @_hash['threshold_unit'] = 'thresholdUnit'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['trigger_cycle'] = 'triggerCycle'
      @_hash['trigger_id'] = 'triggerId'
      @_hash['trigger_name'] = 'triggerName'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        comparator
        created_at
        group_name
        modified_at
        notification_group_name
        organization_name
        sms_type
        threshold
        threshold_unit
        trigger_category
        trigger_cycle
        trigger_id
        trigger_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   comparator = SKIP,
                   created_at = SKIP,
                   group_name = SKIP,
                   modified_at = SKIP,
                   notification_group_name = SKIP,
                   organization_name = SKIP,
                   sms_type = SKIP,
                   threshold = SKIP,
                   threshold_unit = SKIP,
                   trigger_category = SKIP,
                   trigger_cycle = SKIP,
                   trigger_id = SKIP,
                   trigger_name = SKIP)
      @account_name = account_name unless account_name == SKIP
      @comparator = comparator unless comparator == SKIP
      @created_at = created_at unless created_at == SKIP
      @group_name = group_name unless group_name == SKIP
      @modified_at = modified_at unless modified_at == SKIP
      @notification_group_name = notification_group_name unless notification_group_name == SKIP
      @organization_name = organization_name unless organization_name == SKIP
      @sms_type = sms_type unless sms_type == SKIP
      @threshold = threshold unless threshold == SKIP
      @threshold_unit = threshold_unit unless threshold_unit == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @trigger_cycle = trigger_cycle unless trigger_cycle == SKIP
      @trigger_id = trigger_id unless trigger_id == SKIP
      @trigger_name = trigger_name unless trigger_name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      comparator = hash.key?('comparator') ? hash['comparator'] : SKIP
      created_at = if hash.key?('createdAt')
                     (DateTimeHelper.from_rfc3339(hash['createdAt']) if hash['createdAt'])
                   else
                     SKIP
                   end
      group_name = hash.key?('groupName') ? hash['groupName'] : SKIP
      modified_at = if hash.key?('modifiedAt')
                      (DateTimeHelper.from_rfc3339(hash['modifiedAt']) if hash['modifiedAt'])
                    else
                      SKIP
                    end
      notification_group_name =
        hash.key?('notificationGroupName') ? hash['notificationGroupName'] : SKIP
      organization_name =
        hash.key?('organizationName') ? hash['organizationName'] : SKIP
      sms_type = hash.key?('smsType') ? hash['smsType'] : SKIP
      threshold = hash.key?('threshold') ? hash['threshold'] : SKIP
      threshold_unit = hash.key?('thresholdUnit') ? hash['thresholdUnit'] : SKIP
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      trigger_cycle = hash.key?('triggerCycle') ? hash['triggerCycle'] : SKIP
      trigger_id = hash.key?('triggerId') ? hash['triggerId'] : SKIP
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP

      # Create object from extracted values.
      GetTriggerResponse.new(account_name,
                             comparator,
                             created_at,
                             group_name,
                             modified_at,
                             notification_group_name,
                             organization_name,
                             sms_type,
                             threshold,
                             threshold_unit,
                             trigger_category,
                             trigger_cycle,
                             trigger_id,
                             trigger_name)
    end

    def to_custom_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end

    def to_custom_modified_at
      DateTimeHelper.to_rfc3339(modified_at)
    end
  end
end
