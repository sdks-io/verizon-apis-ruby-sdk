# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # ServicesProfileRegistration Model.
  class ServicesProfileRegistration < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Id of the service profile.
    # @return [UUID | String]
    attr_accessor :id

    # Name for a service profile.
    # @return [String]
    attr_accessor :name

    # Service being deployed.
    # @return [String]
    attr_accessor :service_name

    # Service version being deployed.
    # @return [String]
    attr_accessor :service_version

    # Service version being deployed.
    # @return [String]
    attr_accessor :current_version

    # Service version being deployed.
    # @return [String]
    attr_accessor :version

    # Service version being deployed.
    # @return [ServicesProfileRegistrationStateEnum]
    attr_accessor :state

    # Id of particular customer.
    # @return [String]
    attr_accessor :customer_id

    # Id of particular customer.
    # @return [String]
    attr_accessor :created_by

    # Id of particular customer.
    # @return [String]
    attr_accessor :created_at

    # Id of particular customer.
    # @return [String]
    attr_accessor :last_updated_by

    # Id of particular customer.
    # @return [String]
    attr_accessor :last_updated_at

    # Id of particular customer.
    # @return [Array[LinkedServiceInstance]]
    attr_accessor :linked_service_instances

    # Id of particular customer.
    # @return [AccessIntents]
    attr_accessor :access_intents

    # Id of particular customer.
    # @return [PlacementIntents]
    attr_accessor :placement_intents

    # Id of particular customer.
    # @return [Array[DeploymentLocation]]
    attr_accessor :deployment_locations

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['service_name'] = 'serviceName'
      @_hash['service_version'] = 'serviceVersion'
      @_hash['current_version'] = 'currentVersion'
      @_hash['version'] = 'version'
      @_hash['state'] = 'state'
      @_hash['customer_id'] = 'customerID'
      @_hash['created_by'] = 'createdBy'
      @_hash['created_at'] = 'createdAt'
      @_hash['last_updated_by'] = 'lastUpdatedBy'
      @_hash['last_updated_at'] = 'lastUpdatedAt'
      @_hash['linked_service_instances'] = 'linkedServiceInstances'
      @_hash['access_intents'] = 'accessIntents'
      @_hash['placement_intents'] = 'placementIntents'
      @_hash['deployment_locations'] = 'deploymentLocations'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        service_name
        service_version
        current_version
        version
        state
        customer_id
        created_by
        created_at
        last_updated_by
        last_updated_at
        linked_service_instances
        access_intents
        placement_intents
        deployment_locations
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        linked_service_instances
        deployment_locations
      ]
    end

    def initialize(id = SKIP,
                   name = SKIP,
                   service_name = SKIP,
                   service_version = SKIP,
                   current_version = SKIP,
                   version = SKIP,
                   state = SKIP,
                   customer_id = SKIP,
                   created_by = SKIP,
                   created_at = SKIP,
                   last_updated_by = SKIP,
                   last_updated_at = SKIP,
                   linked_service_instances = SKIP,
                   access_intents = SKIP,
                   placement_intents = SKIP,
                   deployment_locations = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @service_name = service_name unless service_name == SKIP
      @service_version = service_version unless service_version == SKIP
      @current_version = current_version unless current_version == SKIP
      @version = version unless version == SKIP
      @state = state unless state == SKIP
      @customer_id = customer_id unless customer_id == SKIP
      @created_by = created_by unless created_by == SKIP
      @created_at = created_at unless created_at == SKIP
      @last_updated_by = last_updated_by unless last_updated_by == SKIP
      @last_updated_at = last_updated_at unless last_updated_at == SKIP
      @linked_service_instances = linked_service_instances unless linked_service_instances == SKIP
      @access_intents = access_intents unless access_intents == SKIP
      @placement_intents = placement_intents unless placement_intents == SKIP
      @deployment_locations = deployment_locations unless deployment_locations == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      service_name = hash.key?('serviceName') ? hash['serviceName'] : SKIP
      service_version =
        hash.key?('serviceVersion') ? hash['serviceVersion'] : SKIP
      current_version =
        hash.key?('currentVersion') ? hash['currentVersion'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      customer_id = hash.key?('customerID') ? hash['customerID'] : SKIP
      created_by = hash.key?('createdBy') ? hash['createdBy'] : SKIP
      created_at = hash.key?('createdAt') ? hash['createdAt'] : SKIP
      last_updated_by =
        hash.key?('lastUpdatedBy') ? hash['lastUpdatedBy'] : SKIP
      last_updated_at =
        hash.key?('lastUpdatedAt') ? hash['lastUpdatedAt'] : SKIP
      # Parameter is an array, so we need to iterate through it
      linked_service_instances = nil
      unless hash['linkedServiceInstances'].nil?
        linked_service_instances = []
        hash['linkedServiceInstances'].each do |structure|
          linked_service_instances << (LinkedServiceInstance.from_hash(structure) if structure)
        end
      end

      linked_service_instances = SKIP unless hash.key?('linkedServiceInstances')
      access_intents = AccessIntents.from_hash(hash['accessIntents']) if hash['accessIntents']
      placement_intents = PlacementIntents.from_hash(hash['placementIntents']) if
        hash['placementIntents']
      # Parameter is an array, so we need to iterate through it
      deployment_locations = nil
      unless hash['deploymentLocations'].nil?
        deployment_locations = []
        hash['deploymentLocations'].each do |structure|
          deployment_locations << (DeploymentLocation.from_hash(structure) if structure)
        end
      end

      deployment_locations = SKIP unless hash.key?('deploymentLocations')

      # Create object from extracted values.
      ServicesProfileRegistration.new(id,
                                      name,
                                      service_name,
                                      service_version,
                                      current_version,
                                      version,
                                      state,
                                      customer_id,
                                      created_by,
                                      created_at,
                                      last_updated_by,
                                      last_updated_at,
                                      linked_service_instances,
                                      access_intents,
                                      placement_intents,
                                      deployment_locations)
    end
  end
end
