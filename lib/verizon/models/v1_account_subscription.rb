# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Account subscription information.
  class V1AccountSubscription < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account identifier in "##########-#####".
    # @return [String]
    attr_accessor :account_name

    # Subscription models used by the account.
    # @return [String]
    attr_accessor :purchase_type

    # Number of monthly licenses in an MRC subscription.
    # @return [Integer]
    attr_accessor :license_count

    # Number of licenses currently assigned to devices.
    # @return [Integer]
    attr_accessor :license_used_count

    # The date and time of when the subscription was last updated.
    # @return [String]
    attr_accessor :update_time

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['purchase_type'] = 'purchaseType'
      @_hash['license_count'] = 'licenseCount'
      @_hash['license_used_count'] = 'licenseUsedCount'
      @_hash['update_time'] = 'updateTime'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        purchase_type
        license_count
        license_used_count
        update_time
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   purchase_type = SKIP,
                   license_count = SKIP,
                   license_used_count = SKIP,
                   update_time = SKIP)
      @account_name = account_name unless account_name == SKIP
      @purchase_type = purchase_type unless purchase_type == SKIP
      @license_count = license_count unless license_count == SKIP
      @license_used_count = license_used_count unless license_used_count == SKIP
      @update_time = update_time unless update_time == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      purchase_type = hash.key?('purchaseType') ? hash['purchaseType'] : SKIP
      license_count = hash.key?('licenseCount') ? hash['licenseCount'] : SKIP
      license_used_count =
        hash.key?('licenseUsedCount') ? hash['licenseUsedCount'] : SKIP
      update_time = hash.key?('updateTime') ? hash['updateTime'] : SKIP

      # Create object from extracted values.
      V1AccountSubscription.new(account_name,
                                purchase_type,
                                license_count,
                                license_used_count,
                                update_time)
    end
  end
end
