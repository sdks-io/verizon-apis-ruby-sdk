# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Array of software upgrade objects with the specified status.
  class DeviceSoftwareUpgrade < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Device identifier.
    # @return [String]
    attr_accessor :device_id

    # Upgrade identifier.
    # @return [String]
    attr_accessor :id

    # Account identifier.
    # @return [String]
    attr_accessor :account_name

    # Software name.
    # @return [String]
    attr_accessor :software_name

    # Software upgrade start date.
    # @return [Date]
    attr_accessor :start_date

    # Software upgrade status.
    # @return [String]
    attr_accessor :status

    # Software upgrade result reason.
    # @return [String]
    attr_accessor :reason

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['device_id'] = 'deviceId'
      @_hash['id'] = 'id'
      @_hash['account_name'] = 'accountName'
      @_hash['software_name'] = 'softwareName'
      @_hash['start_date'] = 'startDate'
      @_hash['status'] = 'status'
      @_hash['reason'] = 'reason'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        software_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(device_id = nil,
                   id = nil,
                   account_name = nil,
                   start_date = nil,
                   status = nil,
                   reason = nil,
                   software_name = SKIP)
      @device_id = device_id
      @id = id
      @account_name = account_name
      @software_name = software_name unless software_name == SKIP
      @start_date = start_date
      @status = status
      @reason = reason
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      device_id = hash.key?('deviceId') ? hash['deviceId'] : nil
      id = hash.key?('id') ? hash['id'] : nil
      account_name = hash.key?('accountName') ? hash['accountName'] : nil
      start_date = hash.key?('startDate') ? hash['startDate'] : nil
      status = hash.key?('status') ? hash['status'] : nil
      reason = hash.key?('reason') ? hash['reason'] : nil
      software_name = hash.key?('softwareName') ? hash['softwareName'] : SKIP

      # Create object from extracted values.
      DeviceSoftwareUpgrade.new(device_id,
                                id,
                                account_name,
                                start_date,
                                status,
                                reason,
                                software_name)
    end
  end
end
