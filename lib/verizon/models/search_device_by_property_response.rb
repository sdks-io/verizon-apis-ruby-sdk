# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The device identifier and fields to match in the search.
  class SearchDeviceByPropertyResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Billing account ID of the resource.
    # @return [String]
    attr_accessor :billingaccountid

    # The date the resource was created.
    # @return [String]
    attr_accessor :createdon

    # The date the resource was created.
    # @return [String]
    attr_accessor :eventretention

    # The date the resource was created.
    # @return [Fields1]
    attr_accessor :fields

    # Cellular SIM card identifier.
    # @return [String]
    attr_accessor :iccid

    # ThingSpace unique ID for the device that was added.
    # @return [String]
    attr_accessor :id

    # 4G hardware device identifier.
    # @return [String]
    attr_accessor :imei

    # Identifies the resource kind.
    # @return [String]
    attr_accessor :kind

    # The date the resource was last updated.
    # @return [String]
    attr_accessor :lastupdated

    # The deviceâ€™s service provider.
    # @return [String]
    attr_accessor :providerid

    # The value of the refidtype identifier.
    # @return [String]
    attr_accessor :refid

    # The device identifier type used to refer to this device.
    # @return [String]
    attr_accessor :refidtype

    # Service state of the device.
    # @return [String]
    attr_accessor :state

    # Version of the underlying schema resource.
    # @return [String]
    attr_accessor :version

    # The version of the resource.
    # @return [String]
    attr_accessor :versionid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['billingaccountid'] = 'billingaccountid'
      @_hash['createdon'] = 'createdon'
      @_hash['eventretention'] = 'eventretention'
      @_hash['fields'] = 'fields'
      @_hash['iccid'] = 'iccid'
      @_hash['id'] = 'id'
      @_hash['imei'] = 'imei'
      @_hash['kind'] = 'kind'
      @_hash['lastupdated'] = 'lastupdated'
      @_hash['providerid'] = 'providerid'
      @_hash['refid'] = 'refid'
      @_hash['refidtype'] = 'refidtype'
      @_hash['state'] = 'state'
      @_hash['version'] = 'version'
      @_hash['versionid'] = 'versionid'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        billingaccountid
        createdon
        eventretention
        fields
        iccid
        id
        imei
        kind
        lastupdated
        providerid
        refid
        refidtype
        state
        version
        versionid
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(billingaccountid = SKIP,
                   createdon = SKIP,
                   eventretention = SKIP,
                   fields = SKIP,
                   iccid = SKIP,
                   id = SKIP,
                   imei = SKIP,
                   kind = SKIP,
                   lastupdated = SKIP,
                   providerid = SKIP,
                   refid = SKIP,
                   refidtype = SKIP,
                   state = SKIP,
                   version = SKIP,
                   versionid = SKIP)
      @billingaccountid = billingaccountid unless billingaccountid == SKIP
      @createdon = createdon unless createdon == SKIP
      @eventretention = eventretention unless eventretention == SKIP
      @fields = fields unless fields == SKIP
      @iccid = iccid unless iccid == SKIP
      @id = id unless id == SKIP
      @imei = imei unless imei == SKIP
      @kind = kind unless kind == SKIP
      @lastupdated = lastupdated unless lastupdated == SKIP
      @providerid = providerid unless providerid == SKIP
      @refid = refid unless refid == SKIP
      @refidtype = refidtype unless refidtype == SKIP
      @state = state unless state == SKIP
      @version = version unless version == SKIP
      @versionid = versionid unless versionid == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      billingaccountid =
        hash.key?('billingaccountid') ? hash['billingaccountid'] : SKIP
      createdon = hash.key?('createdon') ? hash['createdon'] : SKIP
      eventretention =
        hash.key?('eventretention') ? hash['eventretention'] : SKIP
      fields = Fields1.from_hash(hash['fields']) if hash['fields']
      iccid = hash.key?('iccid') ? hash['iccid'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      imei = hash.key?('imei') ? hash['imei'] : SKIP
      kind = hash.key?('kind') ? hash['kind'] : SKIP
      lastupdated = hash.key?('lastupdated') ? hash['lastupdated'] : SKIP
      providerid = hash.key?('providerid') ? hash['providerid'] : SKIP
      refid = hash.key?('refid') ? hash['refid'] : SKIP
      refidtype = hash.key?('refidtype') ? hash['refidtype'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP
      versionid = hash.key?('versionid') ? hash['versionid'] : SKIP

      # Create object from extracted values.
      SearchDeviceByPropertyResponse.new(billingaccountid,
                                         createdon,
                                         eventretention,
                                         fields,
                                         iccid,
                                         id,
                                         imei,
                                         kind,
                                         lastupdated,
                                         providerid,
                                         refid,
                                         refidtype,
                                         state,
                                         version,
                                         versionid)
    end
  end
end
