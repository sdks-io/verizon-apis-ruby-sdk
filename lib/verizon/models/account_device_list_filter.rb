# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Filter for a list of devices.
  class AccountDeviceListFilter < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Specify the kind of the device identifier, the type of match, and the
    # string that you want to match.
    # @return [Array[DeviceIdSearch]]
    attr_accessor :device_identifier_filters

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['device_identifier_filters'] = 'deviceIdentifierFilters'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        device_identifier_filters
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(device_identifier_filters = SKIP)
      unless device_identifier_filters == SKIP
        @device_identifier_filters =
          device_identifier_filters
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      device_identifier_filters = nil
      unless hash['deviceIdentifierFilters'].nil?
        device_identifier_filters = []
        hash['deviceIdentifierFilters'].each do |structure|
          device_identifier_filters << (DeviceIdSearch.from_hash(structure) if structure)
        end
      end

      device_identifier_filters = SKIP unless hash.key?('deviceIdentifierFilters')

      # Create object from extracted values.
      AccountDeviceListFilter.new(device_identifier_filters)
    end
  end
end
