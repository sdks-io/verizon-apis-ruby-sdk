# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Running instance of a service.
  class RunningInstance < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Service instance name.
    # @return [String]
    attr_accessor :instance_name

    # Service instance ID.
    # @return [String]
    attr_accessor :instance_id

    # Cloud Service Provider.
    # @return [String]
    attr_accessor :csp

    # Can have any value as - DRAFT_INPROGRESS, DRAFT_COMPLETE,
    # DESIGN_INPROGRESS, DESIGN_FAILED, DESIGN_COMPLETED, VALIDATION_INPROGRESS,
    #  VALIDATION_FAILED, VALIDATION_COMPLETED, TESTING_INPROGRESS,
    # TESTING_FAILED, TESTING_COMPLETED, READY_TO_USE_INPROGRESS,
    # READY_TO_USE_FAILED, READY_TO_USE_COMPLETED,
    # READY_TO_PRIVATE_USE_INPROGRESS, READY_TO_PRIVATE_USE_FAILED,
    # READY_TO_PRIVATE_USE_COMPLETED,  PUBLISH_INPROGRESS,  PUBLISH_FAILED,
    # PUBLISH_COMPLETED,  CERTIFY_INPROGRESS,  CERTIFY_FAILED,
    # CERTIFY_COMPLETED, DEPRECATE_INPROGRESS,  DEPRECATE_FAILED,
    # DEPRECATE_COMPLETED, MARKDELETE_INPROGRESS, MARKDELETE_FAILED,
    # MARKDELETE_COMPLETED.
    # @return [ServiceStatusEnum]
    attr_accessor :status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['instance_name'] = 'instanceName'
      @_hash['instance_id'] = 'instanceID'
      @_hash['csp'] = 'CSP'
      @_hash['status'] = 'status'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        instance_name
        instance_id
        csp
        status
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(instance_name = SKIP,
                   instance_id = SKIP,
                   csp = SKIP,
                   status = SKIP)
      @instance_name = instance_name unless instance_name == SKIP
      @instance_id = instance_id unless instance_id == SKIP
      @csp = csp unless csp == SKIP
      @status = status unless status == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      instance_name = hash.key?('instanceName') ? hash['instanceName'] : SKIP
      instance_id = hash.key?('instanceID') ? hash['instanceID'] : SKIP
      csp = hash.key?('CSP') ? hash['CSP'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP

      # Create object from extracted values.
      RunningInstance.new(instance_name,
                          instance_id,
                          csp,
                          status)
    end
  end
end
