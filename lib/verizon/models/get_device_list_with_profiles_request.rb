# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # GetDeviceListWithProfilesRequest Model.
  class GetDeviceListWithProfilesRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :provisioning_status_filter

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :profile_status_filter

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :carrier_name_filter

    # TODO: Write general description for this method
    # @return [Array[GIODeviceId]]
    attr_accessor :device_filter

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['provisioning_status_filter'] = 'provisioningStatusFilter'
      @_hash['profile_status_filter'] = 'profileStatusFilter'
      @_hash['carrier_name_filter'] = 'carrierNameFilter'
      @_hash['device_filter'] = 'deviceFilter'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        provisioning_status_filter
        profile_status_filter
        carrier_name_filter
        device_filter
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = nil,
                   provisioning_status_filter = SKIP,
                   profile_status_filter = SKIP,
                   carrier_name_filter = SKIP,
                   device_filter = SKIP)
      @account_name = account_name
      unless provisioning_status_filter == SKIP
        @provisioning_status_filter =
          provisioning_status_filter
      end
      @profile_status_filter = profile_status_filter unless profile_status_filter == SKIP
      @carrier_name_filter = carrier_name_filter unless carrier_name_filter == SKIP
      @device_filter = device_filter unless device_filter == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : nil
      provisioning_status_filter =
        hash.key?('provisioningStatusFilter') ? hash['provisioningStatusFilter'] : SKIP
      profile_status_filter =
        hash.key?('profileStatusFilter') ? hash['profileStatusFilter'] : SKIP
      carrier_name_filter =
        hash.key?('carrierNameFilter') ? hash['carrierNameFilter'] : SKIP
      # Parameter is an array, so we need to iterate through it
      device_filter = nil
      unless hash['deviceFilter'].nil?
        device_filter = []
        hash['deviceFilter'].each do |structure|
          device_filter << (GIODeviceId.from_hash(structure) if structure)
        end
      end

      device_filter = SKIP unless hash.key?('deviceFilter')

      # Create object from extracted values.
      GetDeviceListWithProfilesRequest.new(account_name,
                                           provisioning_status_filter,
                                           profile_status_filter,
                                           carrier_name_filter,
                                           device_filter)
    end
  end
end
