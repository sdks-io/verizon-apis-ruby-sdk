# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Information about the carrier.
  class CarrierInformation < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The carrier that will perform the activation. This parameter is only
    # required if you have more than one carrier.
    # @return [String]
    attr_accessor :carrier_name

    # The service plan code that is assigned to the device.
    # @return [String]
    attr_accessor :service_plan

    # The device state. Valid values include: Activate, Suspend, Deactive,
    # Pre-active.
    # @return [String]
    attr_accessor :state

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['carrier_name'] = 'carrierName'
      @_hash['service_plan'] = 'servicePlan'
      @_hash['state'] = 'state'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        carrier_name
        service_plan
        state
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(carrier_name = SKIP,
                   service_plan = SKIP,
                   state = SKIP)
      @carrier_name = carrier_name unless carrier_name == SKIP
      @service_plan = service_plan unless service_plan == SKIP
      @state = state unless state == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      carrier_name = hash.key?('carrierName') ? hash['carrierName'] : SKIP
      service_plan = hash.key?('servicePlan') ? hash['servicePlan'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP

      # Create object from extracted values.
      CarrierInformation.new(carrier_name,
                             service_plan,
                             state)
    end
  end
end
