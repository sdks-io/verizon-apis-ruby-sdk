# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # UsageTriggerUpdateRequest Model.
  class UsageTriggerUpdateRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Usage trigger name
    # @return [String]
    attr_accessor :trigger_name

    # Account name
    # @return [String]
    attr_accessor :account_name

    # The percent of subscribed usage required to activate the trigger, such as
    # 90 or 100.
    # @return [String]
    attr_accessor :threshold_value

    # Comma-separated list of phone numbers to send SMS alerts to. Digits only;
    # no dashes or parentheses, etc.
    # @return [String]
    attr_accessor :sms_phone_numbers

    # Comma-separated list of email addresses to send alerts to.
    # @return [String]
    attr_accessor :email_addresses

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['trigger_name'] = 'triggerName'
      @_hash['account_name'] = 'accountName'
      @_hash['threshold_value'] = 'thresholdValue'
      @_hash['sms_phone_numbers'] = 'smsPhoneNumbers'
      @_hash['email_addresses'] = 'emailAddresses'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        trigger_name
        threshold_value
        sms_phone_numbers
        email_addresses
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = nil,
                   trigger_name = SKIP,
                   threshold_value = SKIP,
                   sms_phone_numbers = SKIP,
                   email_addresses = SKIP)
      @trigger_name = trigger_name unless trigger_name == SKIP
      @account_name = account_name
      @threshold_value = threshold_value unless threshold_value == SKIP
      @sms_phone_numbers = sms_phone_numbers unless sms_phone_numbers == SKIP
      @email_addresses = email_addresses unless email_addresses == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : nil
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP
      threshold_value =
        hash.key?('thresholdValue') ? hash['thresholdValue'] : SKIP
      sms_phone_numbers =
        hash.key?('smsPhoneNumbers') ? hash['smsPhoneNumbers'] : SKIP
      email_addresses =
        hash.key?('emailAddresses') ? hash['emailAddresses'] : SKIP

      # Create object from extracted values.
      UsageTriggerUpdateRequest.new(account_name,
                                    trigger_name,
                                    threshold_value,
                                    sms_phone_numbers,
                                    email_addresses)
    end
  end
end
