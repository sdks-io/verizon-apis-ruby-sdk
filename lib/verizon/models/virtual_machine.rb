# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # VirtualMachine Model.
  class VirtualMachine < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [EdgeServiceRepository]
    attr_accessor :repository

    # TODO: Write general description for this method
    # @return [Revision]
    attr_accessor :revision

    # Type of the template to be used for deployment.
    # @return [TemplateTypeEnum]
    attr_accessor :template_type

    # Type of the template to be used for deployment.
    # @return [EdgeServiceRepository]
    attr_accessor :values

    # Cloud provider where you plan to provision and operate your Kubernetes
    # cluster.
    # @return [CloudProviderEnum]
    attr_accessor :provider

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['repository'] = 'repository'
      @_hash['revision'] = 'revision'
      @_hash['template_type'] = 'templateType'
      @_hash['values'] = 'values'
      @_hash['provider'] = 'provider'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        revision
        values
        provider
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(repository = nil,
                   template_type = TemplateTypeEnum::TERRAFORM,
                   revision = SKIP,
                   values = SKIP,
                   provider = SKIP)
      @repository = repository
      @revision = revision unless revision == SKIP
      @template_type = template_type
      @values = values unless values == SKIP
      @provider = provider unless provider == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      repository = EdgeServiceRepository.from_hash(hash['repository']) if hash['repository']
      template_type = hash['templateType'] ||= TemplateTypeEnum::TERRAFORM
      revision = Revision.from_hash(hash['revision']) if hash['revision']
      values = EdgeServiceRepository.from_hash(hash['values']) if hash['values']
      provider = hash.key?('provider') ? hash['provider'] : SKIP

      # Create object from extracted values.
      VirtualMachine.new(repository,
                         template_type,
                         revision,
                         values,
                         provider)
    end
  end
end
