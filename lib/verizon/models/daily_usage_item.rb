# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Contains only dates when device had sessions.
  class DailyUsageItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Start date of session. ISO 8601 format.
    # @return [String]
    attr_accessor :start_time

    # End date of session. ISO 8601 format.
    # @return [String]
    attr_accessor :end_time

    # Amount of data transferred, measured in Bytes.
    # @return [Integer]
    attr_accessor :num_bytes

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['start_time'] = 'startTime'
      @_hash['end_time'] = 'endTime'
      @_hash['num_bytes'] = 'numBytes'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        start_time
        end_time
        num_bytes
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(start_time = SKIP,
                   end_time = SKIP,
                   num_bytes = SKIP)
      @start_time = start_time unless start_time == SKIP
      @end_time = end_time unless end_time == SKIP
      @num_bytes = num_bytes unless num_bytes == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      start_time = hash.key?('startTime') ? hash['startTime'] : SKIP
      end_time = hash.key?('endTime') ? hash['endTime'] : SKIP
      num_bytes = hash.key?('numBytes') ? hash['numBytes'] : SKIP

      # Create object from extracted values.
      DailyUsageItem.new(start_time,
                         end_time,
                         num_bytes)
    end
  end
end
