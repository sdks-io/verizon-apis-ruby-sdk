# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # ServiceInstance Model.
  class ServiceInstance < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Instance UUID generated by OF.
    # @return [String]
    attr_accessor :id

    # User display name for Service Instance Id.
    # @return [String]
    attr_accessor :name

    # Name of the Service.
    # @return [String]
    attr_accessor :service_name

    # Auto derived time of creation.
    # @return [DateTime]
    attr_accessor :created_at

    # Last modified time.
    # @return [DateTime]
    attr_accessor :modified_at

    # Last modified time.
    # @return [EdgeServiceLaunchParams]
    attr_accessor :labels

    # Name of the service Instance Project(Project Name).
    # @return [String]
    attr_accessor :project_name

    # Name of the service Instance Project(Project Name).
    # @return [Revision]
    attr_accessor :revision

    # Name space inside cluster.
    # @return [String]
    attr_accessor :name_space

    # Default MEC platform for deploying service.
    # @return [DeploymentTypeEnum]
    attr_accessor :deployment_type

    # Default MEC platform for deploying service.
    # @return [Array[RegionItem]]
    attr_accessor :solution_regulations

    # Default MEC platform for deploying service.
    # @return [EdsDiscoveryIntent]
    attr_accessor :eds_discovery_intent

    # Default service type.
    # @return [WorkloadTypeEnum]
    attr_accessor :work_load_type

    # Default service type.
    # @return [ClusterMetadata]
    attr_accessor :cluster_info

    # Default service type.
    # @return [VirtualMachine]
    attr_accessor :virtual_machine_info

    # Default service type.
    # @return [Array[EdgeServiceWorkload]]
    attr_accessor :workload

    # Default service type.
    # @return [ClusterInfra]
    attr_accessor :rafay_cluster_infra

    # Id of particular customer.
    # @return [String]
    attr_accessor :customer_id

    # Id of a user.
    # @return [String]
    attr_accessor :user_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['service_name'] = 'serviceName'
      @_hash['created_at'] = 'createdAt'
      @_hash['modified_at'] = 'modifiedAt'
      @_hash['labels'] = 'labels'
      @_hash['project_name'] = 'projectName'
      @_hash['revision'] = 'revision'
      @_hash['name_space'] = 'nameSpace'
      @_hash['deployment_type'] = 'deploymentType'
      @_hash['solution_regulations'] = 'solutionRegulations'
      @_hash['eds_discovery_intent'] = 'edsDiscoveryIntent'
      @_hash['work_load_type'] = 'workLoadType'
      @_hash['cluster_info'] = 'clusterInfo'
      @_hash['virtual_machine_info'] = 'virtualMachineInfo'
      @_hash['workload'] = 'workload'
      @_hash['rafay_cluster_infra'] = 'rafayClusterInfra'
      @_hash['customer_id'] = 'customerId'
      @_hash['user_id'] = 'userId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        service_name
        created_at
        modified_at
        labels
        project_name
        name_space
        deployment_type
        solution_regulations
        eds_discovery_intent
        work_load_type
        cluster_info
        virtual_machine_info
        workload
        rafay_cluster_infra
        customer_id
        user_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(name = nil,
                   revision = nil,
                   id = SKIP,
                   service_name = SKIP,
                   created_at = SKIP,
                   modified_at = SKIP,
                   labels = SKIP,
                   project_name = 'default',
                   name_space = 'default',
                   deployment_type = DeploymentTypeEnum::PRIVATEMEC,
                   solution_regulations = SKIP,
                   eds_discovery_intent = SKIP,
                   work_load_type = WorkloadTypeEnum::CONTAINER,
                   cluster_info = SKIP,
                   virtual_machine_info = SKIP,
                   workload = SKIP,
                   rafay_cluster_infra = SKIP,
                   customer_id = SKIP,
                   user_id = SKIP)
      @id = id unless id == SKIP
      @name = name
      @service_name = service_name unless service_name == SKIP
      @created_at = created_at unless created_at == SKIP
      @modified_at = modified_at unless modified_at == SKIP
      @labels = labels unless labels == SKIP
      @project_name = project_name unless project_name == SKIP
      @revision = revision
      @name_space = name_space unless name_space == SKIP
      @deployment_type = deployment_type unless deployment_type == SKIP
      @solution_regulations = solution_regulations unless solution_regulations == SKIP
      @eds_discovery_intent = eds_discovery_intent unless eds_discovery_intent == SKIP
      @work_load_type = work_load_type unless work_load_type == SKIP
      @cluster_info = cluster_info unless cluster_info == SKIP
      @virtual_machine_info = virtual_machine_info unless virtual_machine_info == SKIP
      @workload = workload unless workload == SKIP
      @rafay_cluster_infra = rafay_cluster_infra unless rafay_cluster_infra == SKIP
      @customer_id = customer_id unless customer_id == SKIP
      @user_id = user_id unless user_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : nil
      revision = Revision.from_hash(hash['revision']) if hash['revision']
      id = hash.key?('id') ? hash['id'] : SKIP
      service_name = hash.key?('serviceName') ? hash['serviceName'] : SKIP
      created_at = if hash.key?('createdAt')
                     (DateTimeHelper.from_rfc3339(hash['createdAt']) if hash['createdAt'])
                   else
                     SKIP
                   end
      modified_at = if hash.key?('modifiedAt')
                      (DateTimeHelper.from_rfc3339(hash['modifiedAt']) if hash['modifiedAt'])
                    else
                      SKIP
                    end
      labels = EdgeServiceLaunchParams.from_hash(hash['labels']) if hash['labels']
      project_name = hash['projectName'] ||= 'default'
      name_space = hash['nameSpace'] ||= 'default'
      deployment_type =
        hash['deploymentType'] ||= DeploymentTypeEnum::PRIVATEMEC
      # Parameter is an array, so we need to iterate through it
      solution_regulations = nil
      unless hash['solutionRegulations'].nil?
        solution_regulations = []
        hash['solutionRegulations'].each do |structure|
          solution_regulations << (RegionItem.from_hash(structure) if structure)
        end
      end

      solution_regulations = SKIP unless hash.key?('solutionRegulations')
      eds_discovery_intent = EdsDiscoveryIntent.from_hash(hash['edsDiscoveryIntent']) if
        hash['edsDiscoveryIntent']
      work_load_type = hash['workLoadType'] ||= WorkloadTypeEnum::CONTAINER
      cluster_info = ClusterMetadata.from_hash(hash['clusterInfo']) if hash['clusterInfo']
      virtual_machine_info = VirtualMachine.from_hash(hash['virtualMachineInfo']) if
        hash['virtualMachineInfo']
      # Parameter is an array, so we need to iterate through it
      workload = nil
      unless hash['workload'].nil?
        workload = []
        hash['workload'].each do |structure|
          workload << (EdgeServiceWorkload.from_hash(structure) if structure)
        end
      end

      workload = SKIP unless hash.key?('workload')
      rafay_cluster_infra = ClusterInfra.from_hash(hash['rafayClusterInfra']) if
        hash['rafayClusterInfra']
      customer_id = hash.key?('customerId') ? hash['customerId'] : SKIP
      user_id = hash.key?('userId') ? hash['userId'] : SKIP

      # Create object from extracted values.
      ServiceInstance.new(name,
                          revision,
                          id,
                          service_name,
                          created_at,
                          modified_at,
                          labels,
                          project_name,
                          name_space,
                          deployment_type,
                          solution_regulations,
                          eds_discovery_intent,
                          work_load_type,
                          cluster_info,
                          virtual_machine_info,
                          workload,
                          rafay_cluster_infra,
                          customer_id,
                          user_id)
    end

    def to_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end

    def to_modified_at
      DateTimeHelper.to_rfc3339(modified_at)
    end
  end
end
