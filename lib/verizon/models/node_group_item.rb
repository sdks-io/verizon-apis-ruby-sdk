# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # NodeGroupItem Model.
  class NodeGroupItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :modified_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organization_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :partner_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :instance_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :edge_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :provision_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :node_type

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :nodes

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :nodes_min

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :nodes_max

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :node_volume_size

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :node_volume_type

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :node_private_networking

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :node_zones

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :node_ami_family

    # TODO: Write general description for this method
    # @return [NodeLabel]
    attr_accessor :node_labels

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :nodegroup_type

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :enable_asg_access

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :enable_full_access_to_ecr

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :version_info_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :upgrade_info_id

    # TODO: Write general description for this method
    # @return [NodeGroupItemTag]
    attr_accessor :tags

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :config_file_content

    # TODO: Write general description for this method
    # @return [Provision]
    attr_accessor :provision

    # TODO: Write general description for this method
    # @return [VersionInfo]
    attr_accessor :version_info

    # TODO: Write general description for this method
    # @return [UpgradeInfo]
    attr_accessor :upgrade_info

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['created_at'] = 'created_at'
      @_hash['modified_at'] = 'modified_at'
      @_hash['organization_id'] = 'organization_id'
      @_hash['partner_id'] = 'partner_id'
      @_hash['instance_type'] = 'instance_type'
      @_hash['edge_id'] = 'edge_id'
      @_hash['id'] = 'id'
      @_hash['provision_id'] = 'provision_id'
      @_hash['node_type'] = 'node_type'
      @_hash['nodes'] = 'nodes'
      @_hash['nodes_min'] = 'nodes_min'
      @_hash['nodes_max'] = 'nodes_max'
      @_hash['node_volume_size'] = 'node_volume_size'
      @_hash['node_volume_type'] = 'node_volume_type'
      @_hash['node_private_networking'] = 'node_private_networking'
      @_hash['node_zones'] = 'node_zones'
      @_hash['node_ami_family'] = 'node_ami_family'
      @_hash['node_labels'] = 'node_labels'
      @_hash['nodegroup_type'] = 'nodegroup_type'
      @_hash['enable_asg_access'] = 'enable_asg_access'
      @_hash['enable_full_access_to_ecr'] = 'enable_full_access_to_ecr'
      @_hash['version_info_id'] = 'version_info_id'
      @_hash['upgrade_info_id'] = 'upgrade_info_id'
      @_hash['tags'] = 'tags'
      @_hash['config_file_content'] = 'config_file_content'
      @_hash['provision'] = 'provision'
      @_hash['version_info'] = 'version_info'
      @_hash['upgrade_info'] = 'upgrade_info'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        name
        created_at
        modified_at
        organization_id
        partner_id
        instance_type
        edge_id
        id
        provision_id
        node_type
        nodes
        nodes_min
        nodes_max
        node_volume_size
        node_volume_type
        node_private_networking
        node_zones
        node_ami_family
        node_labels
        nodegroup_type
        enable_asg_access
        enable_full_access_to_ecr
        version_info_id
        upgrade_info_id
        tags
        config_file_content
        provision
        version_info
        upgrade_info
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(name = SKIP,
                   created_at = SKIP,
                   modified_at = SKIP,
                   organization_id = SKIP,
                   partner_id = SKIP,
                   instance_type = SKIP,
                   edge_id = SKIP,
                   id = SKIP,
                   provision_id = SKIP,
                   node_type = SKIP,
                   nodes = SKIP,
                   nodes_min = SKIP,
                   nodes_max = SKIP,
                   node_volume_size = SKIP,
                   node_volume_type = SKIP,
                   node_private_networking = SKIP,
                   node_zones = SKIP,
                   node_ami_family = SKIP,
                   node_labels = SKIP,
                   nodegroup_type = SKIP,
                   enable_asg_access = SKIP,
                   enable_full_access_to_ecr = SKIP,
                   version_info_id = SKIP,
                   upgrade_info_id = SKIP,
                   tags = SKIP,
                   config_file_content = SKIP,
                   provision = SKIP,
                   version_info = SKIP,
                   upgrade_info = SKIP)
      @name = name unless name == SKIP
      @created_at = created_at unless created_at == SKIP
      @modified_at = modified_at unless modified_at == SKIP
      @organization_id = organization_id unless organization_id == SKIP
      @partner_id = partner_id unless partner_id == SKIP
      @instance_type = instance_type unless instance_type == SKIP
      @edge_id = edge_id unless edge_id == SKIP
      @id = id unless id == SKIP
      @provision_id = provision_id unless provision_id == SKIP
      @node_type = node_type unless node_type == SKIP
      @nodes = nodes unless nodes == SKIP
      @nodes_min = nodes_min unless nodes_min == SKIP
      @nodes_max = nodes_max unless nodes_max == SKIP
      @node_volume_size = node_volume_size unless node_volume_size == SKIP
      @node_volume_type = node_volume_type unless node_volume_type == SKIP
      @node_private_networking = node_private_networking unless node_private_networking == SKIP
      @node_zones = node_zones unless node_zones == SKIP
      @node_ami_family = node_ami_family unless node_ami_family == SKIP
      @node_labels = node_labels unless node_labels == SKIP
      @nodegroup_type = nodegroup_type unless nodegroup_type == SKIP
      @enable_asg_access = enable_asg_access unless enable_asg_access == SKIP
      unless enable_full_access_to_ecr == SKIP
        @enable_full_access_to_ecr =
          enable_full_access_to_ecr
      end
      @version_info_id = version_info_id unless version_info_id == SKIP
      @upgrade_info_id = upgrade_info_id unless upgrade_info_id == SKIP
      @tags = tags unless tags == SKIP
      @config_file_content = config_file_content unless config_file_content == SKIP
      @provision = provision unless provision == SKIP
      @version_info = version_info unless version_info == SKIP
      @upgrade_info = upgrade_info unless upgrade_info == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      modified_at = hash.key?('modified_at') ? hash['modified_at'] : SKIP
      organization_id =
        hash.key?('organization_id') ? hash['organization_id'] : SKIP
      partner_id = hash.key?('partner_id') ? hash['partner_id'] : SKIP
      instance_type = hash.key?('instance_type') ? hash['instance_type'] : SKIP
      edge_id = hash.key?('edge_id') ? hash['edge_id'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      provision_id = hash.key?('provision_id') ? hash['provision_id'] : SKIP
      node_type = hash.key?('node_type') ? hash['node_type'] : SKIP
      nodes = hash.key?('nodes') ? hash['nodes'] : SKIP
      nodes_min = hash.key?('nodes_min') ? hash['nodes_min'] : SKIP
      nodes_max = hash.key?('nodes_max') ? hash['nodes_max'] : SKIP
      node_volume_size =
        hash.key?('node_volume_size') ? hash['node_volume_size'] : SKIP
      node_volume_type =
        hash.key?('node_volume_type') ? hash['node_volume_type'] : SKIP
      node_private_networking =
        hash.key?('node_private_networking') ? hash['node_private_networking'] : SKIP
      node_zones = hash.key?('node_zones') ? hash['node_zones'] : SKIP
      node_ami_family =
        hash.key?('node_ami_family') ? hash['node_ami_family'] : SKIP
      node_labels = NodeLabel.from_hash(hash['node_labels']) if hash['node_labels']
      nodegroup_type =
        hash.key?('nodegroup_type') ? hash['nodegroup_type'] : SKIP
      enable_asg_access =
        hash.key?('enable_asg_access') ? hash['enable_asg_access'] : SKIP
      enable_full_access_to_ecr =
        hash.key?('enable_full_access_to_ecr') ? hash['enable_full_access_to_ecr'] : SKIP
      version_info_id =
        hash.key?('version_info_id') ? hash['version_info_id'] : SKIP
      upgrade_info_id =
        hash.key?('upgrade_info_id') ? hash['upgrade_info_id'] : SKIP
      tags = NodeGroupItemTag.from_hash(hash['tags']) if hash['tags']
      config_file_content =
        hash.key?('config_file_content') ? hash['config_file_content'] : SKIP
      provision = Provision.from_hash(hash['provision']) if hash['provision']
      version_info = VersionInfo.from_hash(hash['version_info']) if hash['version_info']
      upgrade_info = UpgradeInfo.from_hash(hash['upgrade_info']) if hash['upgrade_info']

      # Create object from extracted values.
      NodeGroupItem.new(name,
                        created_at,
                        modified_at,
                        organization_id,
                        partner_id,
                        instance_type,
                        edge_id,
                        id,
                        provision_id,
                        node_type,
                        nodes,
                        nodes_min,
                        nodes_max,
                        node_volume_size,
                        node_volume_type,
                        node_private_networking,
                        node_zones,
                        node_ami_family,
                        node_labels,
                        nodegroup_type,
                        enable_asg_access,
                        enable_full_access_to_ecr,
                        version_info_id,
                        upgrade_info_id,
                        tags,
                        config_file_content,
                        provision,
                        version_info,
                        upgrade_info)
    end
  end
end
