# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # The user can create cloud credentials used for deploying workloads to the
  # CSP environment.
  class CSPProfile < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # System generated unique identifier to identify the CSP Profile uniquely.
    # @return [String]
    attr_accessor :id

    # Usage tells how many services are using the CSP Profile. Only CSP Profile
    # with 0 usage count be allowed to delete.
    # @return [Integer]
    attr_accessor :usage

    # Name of the cloud credential to uniquely identify the CSP.
    # @return [String]
    attr_accessor :csp_profile_name

    # Unique identification of the organization creating the CSP Profile.
    # @return [String]
    attr_accessor :customer_id

    # Project name where service artifacts needs to be stored.
    # @return [String]
    attr_accessor :project_name

    # Type of CSP profile.
    # @return [CSPProfileTypeEnum]
    attr_accessor :type

    # Information related to manage resources in AWS infrastructure.
    # @return [AwsCspProfile]
    attr_accessor :aws_csp_profile

    # Information related to manage resources in Azure infrastructure.
    # @return [AzureCspProfile]
    attr_accessor :azure_csp_profile

    # Default location where service needs to be deployed.
    # @return [DefaultLocation]
    attr_accessor :default_location

    # Auto-derived Time of creation. Part of response only.
    # @return [DateTime]
    attr_accessor :verification_time_stamp

    # State of the CSP profile.
    # @return [String]
    attr_accessor :state

    # True if CSP is validated using provided credential, false otherwise.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_validated

    # Auto-derived Time of creation. Part of response only.
    # @return [DateTime]
    attr_accessor :created_date

    # Last modified time. Part of response only.
    # @return [DateTime]
    attr_accessor :last_modified_date

    # User who created the dropDown. Part of response only.
    # @return [String]
    attr_accessor :created_by

    # User who last modified the dropDown. Part of response only.
    # @return [String]
    attr_accessor :last_modified_by

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['usage'] = 'usage'
      @_hash['csp_profile_name'] = 'cspProfileName'
      @_hash['customer_id'] = 'customerID'
      @_hash['project_name'] = 'projectName'
      @_hash['type'] = 'type'
      @_hash['aws_csp_profile'] = 'awsCspProfile'
      @_hash['azure_csp_profile'] = 'azureCspProfile'
      @_hash['default_location'] = 'defaultLocation'
      @_hash['verification_time_stamp'] = 'verificationTimeStamp'
      @_hash['state'] = 'state'
      @_hash['is_validated'] = 'isValidated'
      @_hash['created_date'] = 'createdDate'
      @_hash['last_modified_date'] = 'lastModifiedDate'
      @_hash['created_by'] = 'createdBy'
      @_hash['last_modified_by'] = 'lastModifiedBy'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        usage
        customer_id
        project_name
        type
        aws_csp_profile
        azure_csp_profile
        default_location
        verification_time_stamp
        state
        is_validated
        created_date
        last_modified_date
        created_by
        last_modified_by
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(csp_profile_name = nil,
                   id = SKIP,
                   usage = SKIP,
                   customer_id = SKIP,
                   project_name = SKIP,
                   type = SKIP,
                   aws_csp_profile = SKIP,
                   azure_csp_profile = SKIP,
                   default_location = SKIP,
                   verification_time_stamp = SKIP,
                   state = SKIP,
                   is_validated = false,
                   created_date = SKIP,
                   last_modified_date = SKIP,
                   created_by = SKIP,
                   last_modified_by = SKIP)
      @id = id unless id == SKIP
      @usage = usage unless usage == SKIP
      @csp_profile_name = csp_profile_name
      @customer_id = customer_id unless customer_id == SKIP
      @project_name = project_name unless project_name == SKIP
      @type = type unless type == SKIP
      @aws_csp_profile = aws_csp_profile unless aws_csp_profile == SKIP
      @azure_csp_profile = azure_csp_profile unless azure_csp_profile == SKIP
      @default_location = default_location unless default_location == SKIP
      @verification_time_stamp = verification_time_stamp unless verification_time_stamp == SKIP
      @state = state unless state == SKIP
      @is_validated = is_validated unless is_validated == SKIP
      @created_date = created_date unless created_date == SKIP
      @last_modified_date = last_modified_date unless last_modified_date == SKIP
      @created_by = created_by unless created_by == SKIP
      @last_modified_by = last_modified_by unless last_modified_by == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      csp_profile_name =
        hash.key?('cspProfileName') ? hash['cspProfileName'] : nil
      id = hash.key?('id') ? hash['id'] : SKIP
      usage = hash.key?('usage') ? hash['usage'] : SKIP
      customer_id = hash.key?('customerID') ? hash['customerID'] : SKIP
      project_name = hash.key?('projectName') ? hash['projectName'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      aws_csp_profile = AwsCspProfile.from_hash(hash['awsCspProfile']) if hash['awsCspProfile']
      azure_csp_profile = AzureCspProfile.from_hash(hash['azureCspProfile']) if
        hash['azureCspProfile']
      default_location = DefaultLocation.from_hash(hash['defaultLocation']) if
        hash['defaultLocation']
      verification_time_stamp = if hash.key?('verificationTimeStamp')
                                  (DateTimeHelper.from_rfc3339(hash['verificationTimeStamp']) if hash['verificationTimeStamp'])
                                else
                                  SKIP
                                end
      state = hash.key?('state') ? hash['state'] : SKIP
      is_validated = hash['isValidated'] ||= false
      created_date = if hash.key?('createdDate')
                       (DateTimeHelper.from_rfc3339(hash['createdDate']) if hash['createdDate'])
                     else
                       SKIP
                     end
      last_modified_date = if hash.key?('lastModifiedDate')
                             (DateTimeHelper.from_rfc3339(hash['lastModifiedDate']) if hash['lastModifiedDate'])
                           else
                             SKIP
                           end
      created_by = hash.key?('createdBy') ? hash['createdBy'] : SKIP
      last_modified_by =
        hash.key?('lastModifiedBy') ? hash['lastModifiedBy'] : SKIP

      # Create object from extracted values.
      CSPProfile.new(csp_profile_name,
                     id,
                     usage,
                     customer_id,
                     project_name,
                     type,
                     aws_csp_profile,
                     azure_csp_profile,
                     default_location,
                     verification_time_stamp,
                     state,
                     is_validated,
                     created_date,
                     last_modified_date,
                     created_by,
                     last_modified_by)
    end

    def to_verification_time_stamp
      DateTimeHelper.to_rfc3339(verification_time_stamp)
    end

    def to_created_date
      DateTimeHelper.to_rfc3339(created_date)
    end

    def to_last_modified_date
      DateTimeHelper.to_rfc3339(last_modified_date)
    end
  end
end
