# verizon_thing_space_quality_of_service_api_endpoints
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module VerizonThingSpaceQualityOfServiceApiEndpoints
  # DeviceInfo Model.
  class DeviceInfo < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # device identifiers consisting of an ID value and what that value
    # represents (kind)
    # @return [DeviceId]
    attr_accessor :device_id

    # the IPv6 IP address of the device
    # @return [String]
    attr_accessor :device_i_pv6_addr

    # The details of the data connection
    # @return [Array[FlowInfo]]
    attr_accessor :flow_info

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['device_id'] = 'deviceId'
      @_hash['device_i_pv6_addr'] = 'deviceIPv6Addr'
      @_hash['flow_info'] = 'flowInfo'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        device_id
        device_i_pv6_addr
        flow_info
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(device_id = SKIP, device_i_pv6_addr = SKIP, flow_info = SKIP)
      @device_id = device_id unless device_id == SKIP
      @device_i_pv6_addr = device_i_pv6_addr unless device_i_pv6_addr == SKIP
      @flow_info = flow_info unless flow_info == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      device_id = DeviceId.from_hash(hash['deviceId']) if hash['deviceId']
      device_i_pv6_addr =
        hash.key?('deviceIPv6Addr') ? hash['deviceIPv6Addr'] : SKIP
      # Parameter is an array, so we need to iterate through it
      flow_info = nil
      unless hash['flowInfo'].nil?
        flow_info = []
        hash['flowInfo'].each do |structure|
          flow_info << (FlowInfo.from_hash(structure) if structure)
        end
      end

      flow_info = SKIP unless hash.key?('flowInfo')

      # Create object from extracted values.
      DeviceInfo.new(device_id,
                     device_i_pv6_addr,
                     flow_info)
    end
  end
end
